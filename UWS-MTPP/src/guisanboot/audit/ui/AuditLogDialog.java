/*
 * AuditLogDialog.java
 *
 * Created on Aug 10, 2009, 11:43 AM
 */

package guisanboot.audit.ui;

import guisanboot.audit.data.Audit;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.border.*;
import javax.swing.table.*;

import mylib.UI.*;
import guisanboot.res.*;
import guisanboot.ui.SanBootView;

/**
 *
 * @author  Administrator
 */
public class AuditLogDialog extends javax.swing.JDialog {
    SanBootView view;
    BrowserTable table = new BrowserTable();
    int begin = 1;
    int end = 51;
    boolean isFirst = true;
    boolean beforeGet = true;
    boolean hasDel = false;
    private final Object lock = new Object();
    
    // 表选择listener,但是要注意add和remove，否则gui上有问题
    ListSelectionListener listener;
    
    /** Creates new form BackupHistoryDialog */
    public AuditLogDialog(java.awt.Frame parent, boolean modal) {
        super( parent, modal );
        initComponents();
    }
    
    public AuditLogDialog( SanBootView view ){
        this( view,true );
        myInit( view );
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel15 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel7 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel4.setPreferredSize(new java.awt.Dimension(39, 215));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel8.setLayout(new java.awt.BorderLayout());

        jPanel11.setLayout(new java.awt.BorderLayout());

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("Final Message"));
        jPanel13.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jTextArea1.setLineWrap(true);
        jTextArea1.setDisabledTextColor(java.awt.Color.black);
        jTextArea1.setEnabled(false);
        jTextArea1.setOpaque(false);
        jScrollPane2.setViewportView(jTextArea1);

        jPanel13.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel11.add(jPanel13, java.awt.BorderLayout.CENTER);

        jPanel15.setPreferredSize(new java.awt.Dimension(10, 20));
        jPanel11.add(jPanel15, java.awt.BorderLayout.SOUTH);

        jPanel8.add(jPanel11, java.awt.BorderLayout.CENTER);

        jPanel10.setPreferredSize(new java.awt.Dimension(30, 10));
        jPanel8.add(jPanel10, java.awt.BorderLayout.WEST);

        jPanel12.setPreferredSize(new java.awt.Dimension(30, 10));
        jPanel8.add(jPanel12, java.awt.BorderLayout.EAST);

        jTabbedPane1.addTab("General", jPanel8);

        jPanel4.add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel4, java.awt.BorderLayout.SOUTH);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel5.setMinimumSize(new java.awt.Dimension(0, 50));
        jPanel5.setPreferredSize(new java.awt.Dimension(0, 150));
        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel6.setLayout(new java.awt.BorderLayout());
        jPanel6.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel5.add(jPanel6, java.awt.BorderLayout.CENTER);

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 25, 5));

        jButton3.setText("Back");
        jButton3.setPreferredSize(new java.awt.Dimension(70, 24));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton3);

        jButton4.setText("Next");
        jButton4.setPreferredSize(new java.awt.Dimension(70, 24));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton4);

        jPanel5.add(jPanel7, java.awt.BorderLayout.SOUTH);

        jPanel1.add(jPanel5, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.BorderLayout());
        jPanel2.add(jSeparator1, java.awt.BorderLayout.NORTH);

        jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 1, 5, 1));
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 30, 5));

        jButton1.setText("Remove");
        jButton1.setPreferredSize(new java.awt.Dimension(81, 24));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1);

        jButton5.setText("Remove All");
        jButton5.setPreferredSize(new java.awt.Dimension(97, 24));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton5);

        jButton2.setText("Close");
        jButton2.setPreferredSize(new java.awt.Dimension(81, 24));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);

        jPanel2.add(jPanel3, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    // remove all
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int ret = JOptionPane.showConfirmDialog(
            this,
            SanBootView.res.getString("AuditLogDialog.confirm1"),
            SanBootView.res.getString("common.confirm"),
            JOptionPane.OK_CANCEL_OPTION
        );
        if( ( ret == JOptionPane.CANCEL_OPTION ) || ( ret == JOptionPane.CLOSED_OPTION) ){
            return;
        }
        
        // 先删除所有的 log
        RemoveAuditLogThread  thread = new RemoveAuditLogThread(
            view,
            this
        );
        view.startupProcessDiag(
            SanBootView.res.getString("AuditLogDialog.pdiagTitle.deltingAuditLog"),
            SanBootView.res.getString("AuditLogDialog.pdiagTip.deltingAuditLog"),
            thread
        );
        
        // 再清除表上的所有记录
        clearGenandSumPane();
        removeListSelectionListener();
        removeAllRow();
        
        // 重新初始化
        jButton3.setEnabled( false );
        jButton4.setEnabled( true );
        hasDel = false;
        begin = 1;
        end = 1;
        
        addListSelectionListener();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    // remove
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int[] rows = table.getSelectedRows();
        if( rows == null || rows.length <= 0 ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("BackupHistoryDialog.error.nosel")
            );
            return;
        }
  
        int auditIdCol = table.getColumn(
            SanBootView.res.getString("AuditLogDialog.table.audit.id")
        ).getModelIndex();
        
        removeListSelectionListener();
        
        RemoveAuditLogThread thread = new RemoveAuditLogThread(
            view,
            this,
            auditIdCol,
            rows
        );
        view.startupProcessDiag(
            SanBootView.res.getString("AuditLogDialog.pdiagTitle.deltingAuditLog"),
            SanBootView.res.getString("AuditLogDialog.pdiagTip.deltingAuditLog"),
            thread
        );
        
        if( thread.getOkCount() >0 ){
            hasDel = true;
        }
        
        clearGenandSumPane();
        
        addListSelectionListener();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    // next
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        removeListSelectionListener(); //暂时去掉，否则会有GUI上的问题
        clearGenandSumPane();
        removeAllRow();
        
        if( hasDel ){
            hasDel = false;
        }else{
            begin = end;
            end = end+50;
        }
        
        setBeforeGet( true );
        enableButton( false );
        
        AuditLogGeter geter = new AuditLogGeter(
            view, 
            this,
            begin, 
            50
        );
        geter.start();
    }//GEN-LAST:event_jButton4ActionPerformed

    // back
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        removeListSelectionListener(); //暂时去掉，否则会有GUI上的问题
        clearGenandSumPane();
        removeAllRow();
        
        if( hasDel ){
            hasDel = false;
        }
        end = begin;
        begin = begin-50;
        
        setBeforeGet( true );
        enableButton( false );
        
        AuditLogGeter geter = new AuditLogGeter(
            view, 
            this,
            begin, 
            50
        );
        geter.start();
    }//GEN-LAST:event_jButton3ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new AuditLogDialog(new javax.swing.JFrame(), true).setVisible( true );
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
    
    private void myInit( SanBootView _view ){
        view = _view;
        
        setPermOnUser();
        
        jScrollPane1.getViewport().add( table,null );
        jScrollPane1.getViewport().setBackground( Color.white );
        table.addMouseListener( new java.awt.event.MouseAdapter() {
            @Override public void mouseClicked(MouseEvent e) {
                table_mouseClicked(e);
            }
            
        });
        
        table.setSelectionMode( ListSelectionModel.MULTIPLE_INTERVAL_SELECTION );
        
        listener = new ListSelectionListener(){
            public void valueChanged( ListSelectionEvent e ){
                table_mouseClicked( null );
            }
        };
        
        enableButton( false );
        clearGenandSumPane();
        setupLanguage();
        setupTaskTable();
    }
    
    private void  setPermOnUser(){
        if( view.initor.mdb.isLoginUsrIsAdmin() ){ 
            jButton1.setEnabled( false );
            jButton5.setEnabled( false );
        }
    }
    
    /**
     * 关闭窗口的处理.<br>
     * @param  WindowEvent e  窗口事件
     */
    @Override protected void processWindowEvent(WindowEvent e) {
        super.processWindowEvent(e);
        if ( e.getID() == WindowEvent.WINDOW_CLOSING ) {
            dispose();
        }
    }
    
    private void clearGenandSumPane(){
        jTextArea1.setText("");
    }
    
    public void addListSelectionListener(){
        if( listener != null ){
            table.getSelectionModel().addListSelectionListener( 
                listener 
            );
        }
    }
    
    private void removeListSelectionListener(){
        if( listener != null ){
            table.getSelectionModel().removeListSelectionListener( 
                listener 
            );
        }
    }
    
    public DefaultTableModel getTableModel(){
        return (DefaultTableModel)table.getModel();
    }

    //设置语言
    private void setupLanguage(){
        this.setTitle(SanBootView.res.getString("AuditLogDialog.title"));
        this.jButton1.setText(SanBootView.res.getString("BackupHistoryDialog.button.remove"));
        this.jButton2.setText(SanBootView.res.getString("BackupHistoryDialog.button.close"));
        this.jButton3.setText(SanBootView.res.getString("BackupHistoryDialog.button.back"));
        this.jButton4.setText(SanBootView.res.getString("BackupHistoryDialog.button.next"));
        this.jButton5.setText(SanBootView.res.getString("BackupHistoryDialog.button.remall"));
                
        int index = jTabbedPane1.indexOfComponent(jPanel8);
        jTabbedPane1.setTitleAt( index, 
            SanBootView.res.getString("BackupHistoryDialog.tabTitle.general")
        );
        jTabbedPane1.setIconAt( index,ResourceCenter.BTN_ICON_STATISTIC );
        ((TitledBorder)(jPanel13.getBorder())).setTitle(
            SanBootView.res.getString("BackupHistoryDialog.title1")
        );
    }

    //设置工作表
    private void setupTaskTable(){
        Object[] title = new Object[]{
            SanBootView.res.getString("AuditLogDialog.table.audit.id"),
            SanBootView.res.getString("AuditLogDialog.table.audit.user"),
            SanBootView.res.getString("AuditLogDialog.table.audit.stime"),
            SanBootView.res.getString("AuditLogDialog.table.audit.clnt"),
            SanBootView.res.getString("AuditLogDialog.table.audit.event")
        };
        table.setupTitle( title );
        
        int[][] widthList = new int[][]{
            {0,55},{1,120},{2,120},{3,120},{4,145},
        };
        table.setupTableColumnWidth( widthList );
        table.getTableHeader().setBorder( BorderFactory.createRaisedBevelBorder() );
        table.getTableHeader().setReorderingAllowed( false );
    }

    //启用按钮
    public void enableButton( boolean val ){
        if( isFirst ){
            jButton3.setEnabled( false );
            isFirst = false;
        }else{
            if( getBeforeGet() ){
                this.jButton3.setEnabled( val );
            }else{
                if( begin <=1 ){
                    jButton3.setEnabled( false );
                }else if( begin>=51 ){
                    jButton3.setEnabled( true );
                }
            }
        }
        
        if( getBeforeGet() ){
            jButton4.setEnabled( val );
        }else{
            if( table.getRowCount()<50 ){               
                jButton4.setEnabled( false);
            }else{
                jButton4.setEnabled( true );
            }
        }
        
        if( val ){
            if( view.initor.mdb.isLoginUsrIsAdmin() ){
                jButton1.setEnabled( val );
                jButton5.setEnabled( val );
            }else{
                jButton1.setEnabled( false );
                jButton5.setEnabled( false );
            }
        }else{
            jButton1.setEnabled( false );
            jButton5.setEnabled( false );
        }
        
        jButton2.setEnabled( val );
        
        if( !val)
            setDefaultCloseOperation( JDialog.DO_NOTHING_ON_CLOSE );
        else
            setDefaultCloseOperation( JDialog.DISPOSE_ON_CLOSE );
        
        if( val ){ // 判断 next btn的下一步状态
            if( begin == 1 && end == 51 && table.getRowCount()<=0 ){
                hasDel = false;
                begin = 1;
                end = 1;
                this.jButton4.setEnabled(true);
            }
        }
    }

    //table_mouseClicked 表_鼠标单击
    private void table_mouseClicked( MouseEvent e ){
        int row = table.getSelectedRow();
        if( row < 0 ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("BackupHistoryDialog.error.nosel")
            );
            return;
        }

        //界面点击事件 
        int auditIdCol = table.getColumn(
            SanBootView.res.getString("AuditLogDialog.table.audit.id")
        ).getModelIndex();
        DefaultTableModel tableModel = (DefaultTableModel)table.getModel();
        Audit audit = (Audit)tableModel.getValueAt( row,auditIdCol );
        if( audit != null ){
            jTextArea1.setText( audit.getEventDesc() );      
        }
    }
     
    private void removeAllRow(){
        DefaultTableModel model = (DefaultTableModel)table.getModel();
        int size = model.getRowCount();
        while( size >0 ){
             model.removeRow( 0);
             size = size -1;
        }
    }
    
    public void setBeforeGet( boolean val){
        //线程加锁
        synchronized ( lock ){
            beforeGet = val;
        }
    }
    
    public boolean getBeforeGet(){
        synchronized ( lock ){
            return beforeGet;
        }
    }
    
    public Point getCenterPoint( int width,int height ){
        int x = ( getSize().width - width ) / 2 + getX();
        int y = ( getSize().height - height ) / 2 + getY();
        return new Point(x,y);
    }
}
