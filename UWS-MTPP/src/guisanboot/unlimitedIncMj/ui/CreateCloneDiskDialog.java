/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CreateCloneDiskDialog.java
 *
 * Created on 2009-12-16, 11:48:46
 */

package guisanboot.unlimitedIncMj.ui;

import guisanboot.ui.SanBootView;
import guisanboot.unlimitedIncMj.entity.UnlimitedIncMirroredSnap;
import javax.swing.JOptionPane;

/**
 *
 * @author zjj
 */
public class CreateCloneDiskDialog extends javax.swing.JDialog {

    /** Creates new form CreateCloneDiskDialog */
    public CreateCloneDiskDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public CreateCloneDiskDialog( SanBootView view,UnlimitedIncMirroredSnap snap ){
        this( view,true );
        myInit( snap );
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 1, 1, 1));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jLabel1, gridBagConstraints);

        jTextField1.setPreferredSize(new java.awt.Dimension(230, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(jTextField1, gridBagConstraints);

        jLabel2.setText("Desc :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel2.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jPanel2.add(jTextField2, gridBagConstraints);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 1, 1, 1));

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);

        jPanel3.add(jPanel1, java.awt.BorderLayout.CENTER);
        jPanel3.add(jSeparator1, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        cancelBtn_process();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        okBtn_process();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CreateCloneDiskDialog dialog = new CreateCloneDiskDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    Object[] ret = null;

    public void myInit( UnlimitedIncMirroredSnap snap ){
        StringBuffer buf = new StringBuffer();
        buf.append("CloneDisk-");
        buf.append(snap.snap.getSnap_root_id());
        buf.append(".");
        buf.append(snap.snap.getSnap_local_snapid());
        buf.append("-");
        buf.append(snap.snap.getSimpleCrtTimeStr() );
        this.jTextField1.setText(buf.toString() );
        setupLanguage();
    }
    
    private void setupLanguage(){
        this.setTitle( SanBootView.res.getString("CreateCloneDiskDialog.title") );
        this.jLabel1.setText(SanBootView.res.getString("common.name")+": ");
        this.jLabel2.setText(SanBootView.res.getString("common.desc")+": " );
        this.jButton1.setText( SanBootView.res.getString("common.button.ok"));
        this.jButton2.setText(SanBootView.res.getString("common.button.cancel"));
    }

    private void okBtn_process(){
        String _name = this.jTextField1.getText().trim();
        if( _name.equals("") ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("common.error.noneName")
            );
            return;
        }

        if( _name.getBytes().length > 254 ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("CreateCloneDiskDialog.error.tooLongName")
            );
            return;
        }

        String _desc = this.jTextField2.getText().trim();
        if( !_desc.equals("") ){
            if( _desc.getBytes().length > 254 ){
                JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("CreateCloneDiskDialog.error.tooLongDesc")
                );
                return;
            }
        }

        ret = new Object[2];
        ret[0] = _name;
        ret[1] = _desc;
        
        this.dispose();
    }

    private void cancelBtn_process(){
        ret = null;
        this.dispose();
    }

    public Object[] getValues(){
        return ret;
    }
}

