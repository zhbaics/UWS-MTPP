/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewJDialog.java
 *
 * Created on 2014-8-15, 13:09:34
 */

package guisanboot.vmmanage.ui;

import guisanboot.data.*;
import guisanboot.res.ResourceCenter;
import guisanboot.ui.SanBootView;
import java.util.ArrayList;
import java.util.Vector;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrator
 */
public class CreateVMMachineDialog extends javax.swing.JDialog {

    /**
     * Creates new form CreateVMMachineDialog
     */
    public CreateVMMachineDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public CreateVMMachineDialog(SanBootView _view, VMHostInfo vmhost, Vector _bindlist, BootHost bhost) {
        this(_view, true);
        myInit(_view, vmhost, _bindlist, bhost);
    }
    private Object[] values = null;
    private SanBootView view = null;
    private VMHostInfo vmhost;
    private Vector bindlist = null;
    ArrayList<String> usedvip = new ArrayList<String>();
    ArrayList<String> idlevip = new ArrayList<String>();

    public void myInit(SanBootView _view, VMHostInfo vmhost, Vector _bindlist, BootHost bhost) {
        this.view = _view;
        this.vmhost = vmhost;
        this.bindlist = _bindlist;
        usedvip = view.initor.mdb.getUsedVip();
        idlevip = view.initor.mdb.getIdleVip();
        setLanguage();
        initJComboBox(this.bindlist);
        initVMHostInfo(vmhost, bhost);
    }

    public void initVMHostInfo(VMHostInfo vmh, BootHost bhost) {
        if (vmh != null) {
            jTextField1.setText(vmh.getVm_ip());
            jTextField2.setText(vmh.getVm_port());
            if (vmh.getVm_vip() != null && !"".equals(vmh.getVm_vip())) {
                jTextField3.setText(vmh.getVm_vip());
            } else {
                jTextField3.setText(getIdleVMHostVip());
            }
            jTextField4.setText(vmh.getVm_name());
            String vmpath = vmh.getVm_path();
            jTextField5.setText(vmpath.replaceAll("&nbsp", " "));
            jTextField6.setText("1");
            jTextField7.setText("1024");
            jTextField9.setText("300");
            jTextField10.setText(bhost.getIP());

        }
    }

    public String getIdleVMHostVip() {
        int isize = idlevip.size();
        boolean isidlevip = true;
        String vip = "";
        if (isize > 0) {
            for (int i = isize - 1; i >= 0; i--) {
                String idleip = idlevip.get(i);
                for (int j = 0; j < usedvip.size(); j++) {
                    if (idleip.equals(usedvip.get(j))) {
                        isidlevip = false;
                        break;
                    }
                }
                if (isidlevip) {
                    vip = idleip;
                    break;
                } else {
                    isidlevip = true;
                }
            }
        }
        return vip;
    }

    public void initJComboBox(Vector list) {
        int size = list.size();
        Object binderObj;
        jComboBox2.removeAll();
        if (size > 0) {
            for (int i = 0; i < size; i++) {
                binderObj = list.elementAt(i);
                if (binderObj instanceof BindofVolAndSnap) {
                    VolumeMap vm = ((BindofVolAndSnap) binderObj).getVolMap();
                    if (vm.isOsVolMap()) {
                        ArrayList alist = ((BindofVolAndSnap) binderObj).getSnapList();
                        for (int j = 0; j < alist.size(); j++) {
                            this.jComboBox2.addItem(alist.get(j));
                        }
                    }
                }
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jTextField5 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel7.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel7.setText("CREATE_VM_MACHINE");

        jPanel2.setPreferredSize(new java.awt.Dimension(400, 260));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("ip:");
        jLabel1.setPreferredSize(new java.awt.Dimension(120, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jLabel1, gridBagConstraints);

        jTextField1.setPreferredSize(new java.awt.Dimension(250, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jTextField1, gridBagConstraints);

        jLabel2.setText("port:");
        jLabel2.setPreferredSize(new java.awt.Dimension(120, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jLabel2, gridBagConstraints);

        jTextField2.setPreferredSize(new java.awt.Dimension(250, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jTextField2, gridBagConstraints);

        jLabel3.setText("vip:");
        jLabel3.setPreferredSize(new java.awt.Dimension(120, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jLabel3, gridBagConstraints);

        jTextField3.setPreferredSize(new java.awt.Dimension(250, 21));
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jTextField3, gridBagConstraints);

        jLabel4.setText("vm_name:");
        jLabel4.setPreferredSize(new java.awt.Dimension(120, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jLabel4, gridBagConstraints);

        jTextField4.setPreferredSize(new java.awt.Dimension(250, 21));
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jTextField4, gridBagConstraints);

        jLabel6.setText("network_number:");
        jLabel6.setPreferredSize(new java.awt.Dimension(120, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jLabel6, gridBagConstraints);

        jComboBox2.setPreferredSize(new java.awt.Dimension(250, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jComboBox2, gridBagConstraints);

        jTextField5.setPreferredSize(new java.awt.Dimension(250, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jTextField5, gridBagConstraints);

        jLabel8.setText("memsize:");
        jLabel8.setPreferredSize(new java.awt.Dimension(120, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jLabel8, gridBagConstraints);

        jTextField6.setPreferredSize(new java.awt.Dimension(250, 21));
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jTextField6, gridBagConstraints);

        jLabel9.setText("standby_maxTime:");
        jLabel9.setPreferredSize(new java.awt.Dimension(120, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jLabel9, gridBagConstraints);

        jTextField7.setPreferredSize(new java.awt.Dimension(250, 21));
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jTextField7, gridBagConstraints);

        jLabel5.setText("vm_path:");
        jLabel5.setPreferredSize(new java.awt.Dimension(120, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jLabel5, gridBagConstraints);

        jLabel10.setText("stanby_ip:");
        jLabel10.setPreferredSize(new java.awt.Dimension(120, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jLabel10, gridBagConstraints);

        jTextField9.setPreferredSize(new java.awt.Dimension(250, 21));
        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jTextField9, gridBagConstraints);

        jLabel11.setText("snap_host:");
        jLabel11.setPreferredSize(new java.awt.Dimension(120, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jLabel11, gridBagConstraints);

        jTextField10.setPreferredSize(new java.awt.Dimension(250, 21));
        jTextField10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jTextField10, gridBagConstraints);

        jPanel6.setPreferredSize(new java.awt.Dimension(10, 38));
        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jCheckBox1.setText("jCheckBox1");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jPanel6.add(jCheckBox1);

        jCheckBox2.setText("standby_check");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        jPanel6.add(jCheckBox2);

        jPanel3.setPreferredSize(new java.awt.Dimension(400, 40));

        jButton1.setText("ok");
        jButton1.setPreferredSize(new java.awt.Dimension(70, 23));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1);

        jButton3.setText("cancel");
        jButton3.setPreferredSize(new java.awt.Dimension(70, 23));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 401, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 401, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .add(jPanel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 401, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 401, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 274, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(2, 2, 2)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jTextField7ActionPerformed

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jTextField9ActionPerformed

    private void jTextField10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField10ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jTextField10ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ok_click();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        values = null;
        dispose();
}//GEN-LAST:event_jButton3ActionPerformed
    Pattern pattern = Pattern.compile("\\b((?!\\d\\d\\d)\\d+|1\\d\\d|2[0-4]\\d|25[0-5])\\.((?!\\d\\d\\d)\\d+|1\\d\\d|2[0-4]\\d|25[0-5])\\.((?!\\d\\d\\d)\\d+|1\\d\\d|2[0-4]\\d|25[0-5])\\.((?!\\d\\d\\d)\\d+|1\\d\\d|2[0-4]\\d|25[0-5])\\b");

    public void ok_click() {

        //验证IP和VIP
        String strip = jTextField1.getText().trim();
        Matcher matcher = pattern.matcher(strip);
        if (!matcher.matches()) {
            JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("CreateVMHost.error.wrongIP"));
            return;
        }
        String strvip = jTextField3.getText().trim();
        if (strvip != null && !"".equals(strvip)) {
            matcher = pattern.matcher(strvip);
            if (!matcher.matches()) {
                JOptionPane.showMessageDialog(this,
                        SanBootView.res.getString("CreateVMHost.error.wrongIP"));
                return;
            }
            String oldvip = this.vmhost.getVm_vip();
            if (!strvip.equals(oldvip)) {
                if (isUsedVip(strvip)) {
                    JOptionPane.showMessageDialog(this,
                            SanBootView.res.getString("CreateVMHost.error.usedIP"));
                    return;
                }
            }
        } else {
            strvip = strip;
        }

        //验证端口
        int port = -1;
        String strport = jTextField2.getText().trim();
        try {
            port = Integer.valueOf(strport);
            if (port < 0 || port > 65535) {
                JOptionPane.showMessageDialog(this,
                        SanBootView.res.getString("CreateVMHost.error.wrongPort"));
                return;
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("CreateVMHost.error.wrongPort"));
            return;
        }


        //获取vm_name
        String vm_name = jTextField4.getText().trim();
        if (vm_name == null || "".equals(vm_name)) {
            JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("CreateVMMachineDialog.error.wrongName"));
            return;
        }

        //验证路径
        String strpath = jTextField5.getText().trim();
        String tpath = strpath.replaceAll("\\\\", "/");
        tpath = tpath.trim().replaceAll(" ", "&nbsp");

        //获取快照副本以及相关的信息
        String letter = "c";
        String targetid = "";
        String snapid = "";
        String viewid = "";
        String vm_snap_root_id = "";
        Object obj = jComboBox2.getSelectedItem();
        if (obj instanceof SnapWrapper) {
            SnapWrapper swrapper = (SnapWrapper) obj;
            String newViewName = ResourceCenter.NET_START_VIEW + letter.toUpperCase() + "_used_by_virtual_machine";
            boolean isOk = view.initor.mdb.addView(newViewName, swrapper.snap.getSnap_root_id(), swrapper.snap.getSnap_local_snapid());
            vm_snap_root_id = String.valueOf(swrapper.snap.getSnap_root_id());
            if (isOk) {
                View newView = view.initor.mdb.getCrtView();
                targetid = String.valueOf(newView.getTargetID());
                viewid = String.valueOf(newView.getSnap_localid());
            } else {
                JOptionPane.showMessageDialog(this,
                        SanBootView.res.getString("CreateVMHost.error.wrongcrtview"));
                return;
            }
        } else if (obj instanceof ViewWrapper) {
            ViewWrapper vwrapper = (ViewWrapper) obj;
            targetid = String.valueOf(vwrapper.view.getTargetID());
            viewid = String.valueOf(vwrapper.view.getSnap_localid());
            vm_snap_root_id = String.valueOf(vwrapper.view.getSnap_root_id());
        }

        //是否恢复源机IP
        int tmprecoverip = 0;
        if (this.jCheckBox1.isSelected()) {
            tmprecoverip = 1;
        } else {
            tmprecoverip = 0;
        }

        String finalpath = tpath + "/vmxfile.vmx";

        String standby_maxTime = jTextField9.getText().trim();
        String standby_ip = jTextField10.getText().trim();
        if(!"".equals(standby_ip)&&standby_ip!=null){
            matcher = pattern.matcher(standby_ip);
            if (!matcher.matches()) {
                JOptionPane.showMessageDialog(this,
                        SanBootView.res.getString("CreateVMHost.error.wrongIP"));//IP格式错误，请重新输入IP
                return;
            }
        }
        String standby_isCheck;
        if(this.jCheckBox2.isSelected()){
            standby_isCheck = "1";
        } else{
            standby_isCheck = "0";
        }
        
        if (this.vmhost != null) {
            this.vmhost.setVm_ip(strip);
            this.vmhost.setVm_vip(strvip);
            this.vmhost.setVm_port(strport);
            this.vmhost.setVm_path(finalpath);
            this.vmhost.setVm_name(vm_name);
            this.vmhost.setVm_targetid(targetid);
            this.vmhost.setVm_viewid(viewid);
            this.vmhost.setVm_snapid(snapid);
            this.vmhost.setVm_snap_root_id(vm_snap_root_id);
            this.vmhost.setVm_letter(letter);
            this.vmhost.setVm_recoverip(tmprecoverip);
            this.vmhost.setVm_maxdisctime(standby_maxTime);
            this.vmhost.setVm_pingip(standby_ip);
            this.vmhost.setVm_ischeck(standby_isCheck);

        } else {
            this.vmhost = new VMHostInfo();
            this.vmhost.setVm_ip(strip);
            this.vmhost.setVm_vip(strvip);
            this.vmhost.setVm_port(strport);
            this.vmhost.setVm_path(finalpath);
            this.vmhost.setVm_name(vm_name);
            this.vmhost.setVm_targetid(targetid);
            this.vmhost.setVm_viewid(viewid);
            this.vmhost.setVm_snapid(snapid);
            this.vmhost.setVm_snap_root_id(vm_snap_root_id);
            this.vmhost.setVm_letter(letter);
            this.vmhost.setVm_recoverip(tmprecoverip);
            this.vmhost.setVm_maxdisctime(standby_maxTime);
            this.vmhost.setVm_pingip(standby_ip);
            this.vmhost.setVm_ischeck(standby_isCheck);
        }

        //获取其他参数
        int networkNumber = 1;
        String tnum = jTextField6.getText().trim();
        try {
            if (tnum == null || "".equals(tnum)) {
                JOptionPane.showMessageDialog(this,
                        SanBootView.res.getString("CreateVMMachineDialog.error.nullNumber"));
                return;
            }
            networkNumber = Integer.parseInt(tnum);
            if(networkNumber <= 0){
                JOptionPane.showMessageDialog(this,
                        SanBootView.res.getString("CreateVMMachineDialog.error.PNumber"));
                return;
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("CreateVMMachineDialog.error.wrongtype"));
            return;
        }
        int memzie = 1024;
        String tmem = jTextField7.getText().trim();
        try {
            if (tmem == null || "".equals(tmem)) {
                JOptionPane.showMessageDialog(this,
                        SanBootView.res.getString("CreateVMMachineDialog.error.nullNumber1"));
                return;
            }
            memzie = Integer.parseInt(tmem);
            if(memzie <= 0){
                JOptionPane.showMessageDialog(this,
                        SanBootView.res.getString("CreateVMMachineDialog.error.PNumber"));
                return;
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("CreateVMMachineDialog.error.wrongtype"));
            return;
        }

        values = new Object[4];
        values[0] = this.vmhost;
        values[1] = tpath;
        values[2] = tnum;
        values[3] = tmem;
//        values[4] = standby_maxTime;
//        values[5] = standby_ip;
//        values[6] = standby_isCheck;
        dispose();
    }

    public boolean isUsedVip(String ip) {
        for (int i = 0; i < usedvip.size(); i++) {
            if (ip.equals(usedvip.get(i))) {
                return true;
            }
        }
        return false;
    }

    public void setLanguage() {
        this.jButton1.setText(SanBootView.res.getString("common.button.ok"));
        this.jButton3.setText(SanBootView.res.getString("common.button.cancel"));
        this.jLabel1.setText(SanBootView.res.getString("CreateVMMachineDialog.label.IP"));
        this.jLabel2.setText(SanBootView.res.getString("CreateVMMachineDialog.label.PORT"));
        this.jLabel3.setText(SanBootView.res.getString("CreateVMMachineDialog.label.VIP"));
        this.jLabel4.setText(SanBootView.res.getString("CreateVMMachineDialog.label.NAME"));
        this.jLabel5.setText(SanBootView.res.getString("CreateVMMachineDialog.label.PATH"));
        this.jLabel6.setText(SanBootView.res.getString("CreateVMMachineDialog.label.NETWORKNUMBER"));
        this.jLabel7.setText(SanBootView.res.getString("CreateVMMachineDialog.label.TITLE"));
        this.jLabel8.setText(SanBootView.res.getString("CreateVMMachineDialog.label.MEMZIE"));
        this.jLabel11.setText(SanBootView.res.getString("CreateVMMachineDialog.label.SNAPSHOT"));
        this.jCheckBox1.setText(SanBootView.res.getString("CreateVM.label.recoverIP"));
        this.jLabel9.setText(SanBootView.res.getString("CreateVM.label.standby_maxTime"));
        this.jLabel10.setText(SanBootView.res.getString("CreateVM.label.standby_ip"));
        this.jCheckBox2.setText(SanBootView.res.getString("CreateVM.label.standby_check"));
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CreateVMMachineDialog dialog = new CreateVMMachineDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables

    public Object[] getValues() {
        return values;
    }
}
