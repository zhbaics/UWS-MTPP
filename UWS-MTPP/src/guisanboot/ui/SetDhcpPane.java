/*
 * SetDhcpPane.java
 *
 * Created on 2006/12/29, AM 9:52
 */

package guisanboot.ui;

import javax.swing.*;
import java.util.Vector;

import guisanboot.data.*;
import java.net.InetAddress;
import javax.swing.border.TitledBorder;

/**
 *
 * @author  Administrator
 */
public class SetDhcpPane extends javax.swing.JPanel {
    
    /** Creates new form SelectBootHostPane */
    public SetDhcpPane() {
        initComponents();
    }
    
    public SetDhcpPane( SanBootView view,String osType ){
        this();
        myInit( view,osType );
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jPanel8 = new javax.swing.JPanel();
        jRadioButton2 = new javax.swing.JRadioButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(20, 10));
        add(jPanel1, java.awt.BorderLayout.WEST);

        jPanel2.setPreferredSize(new java.awt.Dimension(20, 10));
        add(jPanel2, java.awt.BorderLayout.EAST);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel4.setPreferredSize(new java.awt.Dimension(10, 60));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jTextArea1.setLineWrap(true);
        jTextArea1.setDisabledTextColor(java.awt.Color.black);
        jTextArea1.setEnabled(false);
        jTextArea1.setOpaque(false);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel4.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel4, java.awt.BorderLayout.NORTH);

        jPanel5.setPreferredSize(new java.awt.Dimension(10, 230));
        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel7.setPreferredSize(new java.awt.Dimension(10, 120));
        jPanel7.setLayout(null);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("   Using DHCP providing by UWS"));
        jPanel9.setOpaque(false);
        jPanel9.setPreferredSize(new java.awt.Dimension(574, 60));
        jPanel9.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("MAC :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel9.add(jLabel2, gridBagConstraints);

        jTextField1.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel9.add(jTextField1, gridBagConstraints);

        jLabel3.setText("IP :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel9.add(jLabel3, gridBagConstraints);

        jLabel4.setText("SubNet : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel9.add(jLabel4, gridBagConstraints);

        jComboBox1.setPreferredSize(new java.awt.Dimension(140, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel9.add(jComboBox1, gridBagConstraints);

        jLabel5.setText("DNS :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel9.add(jLabel5, gridBagConstraints);

        jTextField3.setPreferredSize(new java.awt.Dimension(99, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel9.add(jTextField3, gridBagConstraints);

        jLabel6.setText("defgw :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel9.add(jLabel6, gridBagConstraints);

        jTextField4.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel9.add(jTextField4, gridBagConstraints);

        jTextField2.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel9.add(jTextField2, gridBagConstraints);

        jLabel1.setText("Iboot Srv :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel9.add(jLabel1, gridBagConstraints);

        jComboBox2.setPreferredSize(new java.awt.Dimension(140, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel9.add(jComboBox2, gridBagConstraints);

        jLabel9.setText("netmask: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel9.add(jLabel9, gridBagConstraints);

        jTextField7.setPreferredSize(new java.awt.Dimension(120, 20));
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel9.add(jTextField7, gridBagConstraints);

        jPanel7.add(jPanel9);
        jPanel9.setBounds(0, 13, 490, 110);

        jRadioButton1.setBorder(null);
        jRadioButton1.setPreferredSize(new java.awt.Dimension(200, 19));
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        jPanel7.add(jRadioButton1);
        jRadioButton1.setBounds(10, 13, 15, 19);

        jPanel5.add(jPanel7, java.awt.BorderLayout.NORTH);

        jPanel8.setPreferredSize(new java.awt.Dimension(10, 90));
        jPanel8.setLayout(null);

        jRadioButton2.setBorder(null);
        jRadioButton2.setPreferredSize(new java.awt.Dimension(200, 19));
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });
        jPanel8.add(jRadioButton2);
        jRadioButton2.setBounds(10, 5, 15, 19);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("   Using DHCP providing by others"));
        jPanel10.setPreferredSize(new java.awt.Dimension(574, 44));
        jPanel10.setLayout(new java.awt.GridBagLayout());

        jLabel7.setText("Iboot Srv :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel10.add(jLabel7, gridBagConstraints);

        jTextField5.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 7, 0, 0);
        jPanel10.add(jTextField5, gridBagConstraints);

        jLabel8.setText("IP :");
        jLabel8.setPreferredSize(new java.awt.Dimension(54, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel10.add(jLabel8, gridBagConstraints);

        jTextField6.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel10.add(jTextField6, gridBagConstraints);

        jPanel8.add(jPanel10);
        jPanel10.setBounds(0, 5, 490, 60);

        jPanel5.add(jPanel8, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel5, java.awt.BorderLayout.CENTER);

        add(jPanel3, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        radio1Btn_process();
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        radio2Btn_process();
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jTextField7ActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    // End of variables declaration//GEN-END:variables
    
    SanBootView view;
    ButtonGroup grp = new ButtonGroup();
    Vector ibootSrvList;
    Vector subnetList;
    String osType;
    DhcpClientInfo olddhcpClnt;
    
    private void myInit( SanBootView _view,String osType ){
        view = _view;
        this.osType = osType;
        setupLanguage();
        
        grp.add( jRadioButton1 );
        grp.add( jRadioButton2 );
        
        if( view.initor.dhcpdb.isLoginOK() ){
            jRadioButton1.setSelected( true );
            jTextField1.setEnabled( false );
            jTextField1.setOpaque( false );
        }else{
            jRadioButton1.setSelected( false );
            jRadioButton2.setSelected( true );
            
            jTextField1.setEnabled( false );
            jTextField1.setOpaque( false );
            jTextField2.setEnabled( false );
            jTextField2.setOpaque( false );
            jTextField3.setEnabled( false );
            jTextField3.setOpaque( false );
            jTextField4.setEnabled( false );
            jTextField4.setOpaque( false );
            jComboBox1.setEnabled( false );
            jComboBox2.setEnabled( false ); 
        }
        
        jTextArea1.setText(
            SanBootView.res.getString("InitNWinHostWizardDialog.tip3")
        );
        //jTextArea2.setText(
        //    "      "+SanBootView.res.getString("SetDhcpPane.manualText")
        //);
        
        if( SanBootView.res.isJaLocale() ){
            // adjusting for japanese version (2009.6.22)
            jPanel9.setBounds( 0, 12, 635, 105 );
            jPanel10.setBounds( 0,12, 635, 50 );
        }
    }
    
    private void setupLanguage(){
        //jRadioButton1.setText(SanBootView.res.getString("SetDhcpPane.radioBtn.auto"));
        //jRadioButton2.setText(SanBootView.res.getString("SetDhcpPane.radioBtn.manual"));
        TitledBorder bor = (TitledBorder)jPanel9.getBorder();
        bor.setTitle(
            "      "+SanBootView.res.getString("SetDhcpPane.radioBtn.auto")
        );
        bor = (TitledBorder)jPanel10.getBorder();
        bor.setTitle(
            "      "+SanBootView.res.getString("SetDhcpPane.radioBtn.manual")
        );
        jLabel1.setText(SanBootView.res.getString("SetDhcpPane.label.ibootSrv"));
        jLabel2.setText(SanBootView.res.getString("SetDhcpPane.label.mac"));
        jLabel3.setText(SanBootView.res.getString("SetDhcpPane.label.ip"));
        jLabel4.setText(SanBootView.res.getString("SetDhcpPane.label.subnet"));
        jLabel5.setText(SanBootView.res.getString("SetDhcpPane.label.dns"));
        jLabel6.setText(SanBootView.res.getString("SetDhcpPane.label.gw"));
        jLabel7.setText(SanBootView.res.getString("SetDhcpPane.label.ibootSrv"));
        jLabel8.setText(SanBootView.res.getString("SetDhcpPane.label.ip"));
        jLabel9.setText(SanBootView.res.getString("EditSubnetDialog.label.mask"));
    }
    
    public void initSupplement( String ip_3rd,String nextSrv_3rd ){
        this.jTextField5.setText( nextSrv_3rd );
        this.jTextField6.setText( ip_3rd );
    }
    
    public void initDhcpSetupPane( 
        Vector _ibootSrvList,
        Vector _subnetList,
        String newmac,
        boolean isUseOdyDhcp,
        DhcpClientInfo _olddhcpClnt,
        String ip,
        String ip_3rd,
        String nextsrv_3rd
    ){
        ibootSrvList = _ibootSrvList;
        subnetList = _subnetList;
        olddhcpClnt = _olddhcpClnt;

        // 不管如何，先显示dhcp的信息
        jComboBox1.removeAllItems();
        int size = subnetList.size();
        for( int i=0; i<size; i++ ){
            jComboBox1.addItem( subnetList.elementAt(i) );
        }
        
        jComboBox2.removeAllItems();
        size = ibootSrvList.size();
        for( int i=0; i<size; i++ ){
            jComboBox2.addItem( ibootSrvList.elementAt(i) );
        }
        
        jTextField1.setText( newmac );
        
        if( olddhcpClnt!=null ){
            setSelectedSubnet( olddhcpClnt.subnet );
            setSelectedNextServer( olddhcpClnt.nextServer );
            jTextField2.setText( olddhcpClnt.ip );
            jTextField3.setText( olddhcpClnt.getDNS() );
            jTextField4.setText( olddhcpClnt.getDefGw() );
            if( olddhcpClnt.getSubnet() != null && !"unspecified".equals(olddhcpClnt.getSubnet()) ){
                jTextField7.setText(olddhcpClnt.getSubnet());
            }else{
                jTextField7.setText("255.255.255.0");
                olddhcpClnt.setSubnet("255.255.255.0");
            }
        }else{
            jTextField2.setText( ip );
            jTextField7.setText("255.255.255.0");
        }
        
        this.jTextField5.setText( nextsrv_3rd );
        this.jTextField6.setText( ip_3rd );
        
        if( view.initor.dhcpdb.isLoginOK() ){
            if( isUseOdyDhcp ){
                jRadioButton1.setSelected( true );
                radio1Btn_process();
            }else{
                jRadioButton2.setSelected( true );
                radio2Btn_process(); 
            }
        }else{
            jRadioButton1.setEnabled( false );
            jRadioButton2.setSelected( true );
            radio2Btn_process();
        }
    }
    
    public void initDhcpSetupPane( 
        Vector _ibootSrvList,
        Vector _subnetList,
        String newmac,
        boolean isUseOdyDhcp,
        DhcpClientInfo _olddhcpClnt,
        String ip
    ){
        this.initDhcpSetupPane(_ibootSrvList, _subnetList, newmac, isUseOdyDhcp, _olddhcpClnt, ip,ip,view.initor.getTxIP(ip) );
    }
    
    public boolean isAutoSetup(){
        return jRadioButton1.isSelected();
    }
    
    public boolean isManualSetup(){
        return jRadioButton2.isSelected();
    }
    
    public DhcpClientInfo getOldDhcpClntInfo(){
        return olddhcpClnt;
    }
    
    private void  setSelectedSubnet( String subnet ){
        int size = jComboBox1.getItemCount();
        for( int i=0; i<size; i++ ){
            SubNetInDHCPConf net = (SubNetInDHCPConf)jComboBox1.getItemAt(i);
            if( net.toString().equals( subnet ) ){
                jComboBox1.setSelectedIndex(i);
                break;
            }
        }
    }
    
    private void  setSelectedNextServer( String nextServer ){
        int size = jComboBox2.getItemCount();
        for( int i=0; i<size; i++ ){
            DhcpIBootSrv srv = (DhcpIBootSrv)jComboBox2.getItemAt(i);
            if( srv.getIP().equals( nextServer ) ){
                jComboBox2.setSelectedIndex(i);
                break;
            }
        }
    }
    
    public DhcpClientInfo getDhcpSetInfo(){
        DhcpClientInfo info = new DhcpClientInfo();
        info.mac = jTextField1.getText().trim();
        info.ip = jTextField2.getText().trim();
        
        Object obj = jComboBox1.getSelectedItem();
        if( obj!=null ){
            SubNetInDHCPConf conf = (SubNetInDHCPConf)obj;
            info.subnet = conf.subnet; 
        }
        
        Object obj1 = jComboBox2.getSelectedItem();
        if( obj1 !=null ){
            DhcpIBootSrv ibootsrv = (DhcpIBootSrv)obj1;
            info.nextServer = ibootsrv.ip;
        }
        
        info.dns = jTextField3.getText().trim();
        info.defgw = jTextField4.getText().trim();
        
        // dhcp info for 3rd dhcp server
        info.ip_3rd = jTextField6.getText().trim();
        info.nextServer_3rd = jTextField5.getText().trim();

        info.subnet = jTextField7.getText().trim();
        
        return info;
    }
    
    public boolean checkDhcpInfoValidity(){        
        if( jRadioButton1.isSelected() ){
            if( jComboBox1.getItemCount() <=0 ){
                JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("EditSubnetDialog.errMsg.noneSubnetList")
                );
                return false;
            }
           
            if( jComboBox2.getItemCount() <=0 ){
                JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("EditSubnetDialog.errMsg.noneIbootSrvList")
                );
                return false;
            }
           
            String ipStr = jTextField2.getText().trim();
            String dnsStr = jTextField3.getText().trim();
            String defgwStr = jTextField4.getText().trim();

            if( ipStr.equals("") ){
                JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("EditSubnetDialog.errMsg.noneHostIP")
                );
                return false;
            }

            try{
                InetAddress ip = InetAddress.getByName( ipStr );
            }catch(Exception ex){
                JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("EditSubnetDialog.errMsg.invalidHostIP") +" : "+ipStr
                );
                return false;
            }

            if( !dnsStr.equals("") ){
                try{
                    InetAddress dns = InetAddress.getByName( dnsStr );
                }catch(Exception ex){
                    JOptionPane.showMessageDialog(this,
                        SanBootView.res.getString("EditSubnetDialog.errMsg.invalidDNS") + " : "+dnsStr
                    );
                    return false;
                }
            }

            if( !defgwStr.equals("") ){
                try{
                    InetAddress defgw = InetAddress.getByName( defgwStr );
                }catch(Exception ex){
                    JOptionPane.showMessageDialog(this,
                        SanBootView.res.getString("EditSubnetDialog.errMsg.invalidDefGw") + " : "+defgwStr
                    );
                    return false;
                }
            }
        }else{
            String ip_3rd = jTextField6.getText().trim();
            if( ip_3rd.equals("") ){
                JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("EditSubnetDialog.errMsg.noneHostIP")
                );
                return false;
            }
             
            try{
                InetAddress ip = InetAddress.getByName( ip_3rd );
            }catch(Exception ex){
                JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("EditSubnetDialog.errMsg.invalidHostIP") +" : "+ip_3rd
                );
                return false;
            }
            
            String nextServer_3rd = jTextField5.getText().trim();
            if( nextServer_3rd.equals("") ){
                JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("EditSubnetDialog.errMsg.noneNextServer")
                );
                return false;
            }
             
            try{
                InetAddress ip = InetAddress.getByName( nextServer_3rd );
            }catch(Exception ex){
                JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("EditSubnetDialog.errMsg.invalidNextServer") +" : "+nextServer_3rd
                );
                return false;
            }
        }
        
        return true;
    }
    
    public void setDhcpSetInfo( boolean isUseOdyDhcp,DhcpClientInfo dhcpInfo,String newmac ){
        jTextField1.setText( newmac ); // 显示用户最新选择的网卡mac
        jComboBox1.setSelectedItem( dhcpInfo.subnet );
        jComboBox2.setSelectedItem( dhcpInfo.nextServer ); 
        jTextField2.setText( dhcpInfo.ip );
        jTextField3.setText( dhcpInfo.getDNS() );
        jTextField4.setText( dhcpInfo.getDefGw() );
        
        jTextField5.setText( dhcpInfo.nextServer_3rd );
        jTextField6.setText( dhcpInfo.ip_3rd );
        
        if( view.initor.dhcpdb.isLoginOK() ){
            if( isUseOdyDhcp ){
                jRadioButton1.setSelected( true );
                radio1Btn_process();
            }else{
                jRadioButton2.setSelected( true );
                radio2Btn_process(); 
            }
        }else{
            jRadioButton1.setEnabled( false );
            jRadioButton2.setSelected( true );
            radio2Btn_process();
        }
    }
    
    public void radio1Btn_process(){
        jLabel1.setEnabled( true );
        jLabel2.setEnabled( true );
        jLabel3.setEnabled( true );
        jLabel4.setEnabled( true );
        jLabel5.setEnabled( true );
        jLabel6.setEnabled( true );
        
        jTextField2.setEnabled( true );
        jTextField2.setOpaque( true );
        jTextField3.setEnabled( true );
        jTextField3.setOpaque( true );
        jTextField4.setEnabled( true );
        jTextField4.setOpaque( true );
        jComboBox1.setEnabled( true );
        jComboBox1.setOpaque( true );
        jComboBox2.setEnabled( true );
        jComboBox2.setOpaque( true );
        
        jLabel7.setEnabled( false );
        jLabel8.setEnabled( false );
        jTextField5.setEnabled( false );
        jTextField5.setOpaque( false );
        jTextField6.setEnabled( false );
        jTextField6.setOpaque( false );
  
    }
    
    public void radio2Btn_process(){
        jLabel1.setEnabled( false );
        jLabel2.setEnabled( false );
        jLabel3.setEnabled( false );
        jLabel4.setEnabled( false );
        jLabel5.setEnabled( false );
        jLabel6.setEnabled( false );
        
        jTextField2.setEnabled( false );
        jTextField2.setOpaque( false );
        jTextField3.setEnabled( false );
        jTextField3.setOpaque( false );
        jTextField4.setEnabled( false );
        jTextField4.setOpaque( false );
        jComboBox1.setEnabled( false );
        jComboBox1.setOpaque( false );
        jComboBox2.setEnabled( false );
        jComboBox2.setOpaque( false );
        
        jLabel7.setEnabled( true );
        jLabel8.setEnabled( true );
        jTextField5.setEnabled( true );
        jTextField5.setOpaque( true );
        jTextField6.setEnabled( true );
        jTextField6.setOpaque( true );
    }
}

