/*
 * SetHostForNetBootPane.java
 *
 * Created on 2008/6/27,��AM 9:52
 */

package guisanboot.ui;

import guisanboot.cluster.entity.Cluster;
import guisanboot.com.MacFile;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import java.util.Vector;
import guisanboot.data.*;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.Iterator;

/**
 *
 * @author  Administrator
 */
public class SelectHostForNetBootPane extends javax.swing.JPanel {
    public final static String NO_EXIST_HOST_IP = "no_exist_host_ip";
    
    /** Creates new form SetHostForNetBootPane */
    public SelectHostForNetBootPane() {
        initComponents();
    }
    
    public SelectHostForNetBootPane( SanBootView view,BootHost selHost ){
        this();
        myInit( view,selHost,null );
    }

    public SelectHostForNetBootPane( SanBootView view,Cluster selCluster ){
        this();
        myInit( view,null,selCluster );
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jPanel8 = new javax.swing.JPanel();
        jRadioButton2 = new javax.swing.JRadioButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(20, 10));
        add(jPanel1, java.awt.BorderLayout.WEST);

        jPanel2.setPreferredSize(new java.awt.Dimension(20, 10));
        add(jPanel2, java.awt.BorderLayout.EAST);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel4.setPreferredSize(new java.awt.Dimension(10, 60));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jTextArea1.setLineWrap(true);
        jTextArea1.setDisabledTextColor(java.awt.Color.black);
        jTextArea1.setEnabled(false);
        jTextArea1.setOpaque(false);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel4.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel4, java.awt.BorderLayout.NORTH);

        jPanel5.setPreferredSize(new java.awt.Dimension(10, 230));
        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel7.setPreferredSize(new java.awt.Dimension(10, 100));
        jPanel7.setLayout(null);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("                                                                     "));
        jPanel9.setOpaque(false);
        jPanel9.setPreferredSize(new java.awt.Dimension(764, 35));
        jPanel9.setLayout(new java.awt.GridBagLayout());

        jComboBox1.setPreferredSize(new java.awt.Dimension(300, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel9.add(jComboBox1, gridBagConstraints);

        jLabel1.setText("Host :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel9.add(jLabel1, gridBagConstraints);

        jPanel7.add(jPanel9);
        jPanel9.setBounds(0, 12, 460, 70);

        jRadioButton1.setText("Known Host");
        jRadioButton1.setBorder(null);
        jRadioButton1.setPreferredSize(new java.awt.Dimension(200, 19));
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        jPanel7.add(jRadioButton1);
        jRadioButton1.setBounds(20, 10, 100, 19);

        jPanel5.add(jPanel7, java.awt.BorderLayout.NORTH);

        jPanel8.setPreferredSize(new java.awt.Dimension(10, 90));
        jPanel8.setLayout(null);

        jRadioButton2.setText("Unknown Host");
        jRadioButton2.setBorder(null);
        jRadioButton2.setPreferredSize(new java.awt.Dimension(200, 19));
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });
        jPanel8.add(jRadioButton2);
        jRadioButton2.setBounds(20, 10, 100, 19);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("                                                                      "));

        jLabel2.setText("MAC Addr :");

        jTextField1.setPreferredSize(new java.awt.Dimension(280, 20));

        jComboBox2.setPreferredSize(new java.awt.Dimension(300, 20));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel10Layout = new org.jdesktop.layout.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel10Layout.createSequentialGroup()
                .add(41, 41, 41)
                .add(jLabel2)
                .add(5, 5, 5)
                .add(jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jComboBox2, 0, 0, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel10Layout.createSequentialGroup()
                .add(jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel10Layout.createSequentialGroup()
                        .add(12, 12, 12)
                        .add(jLabel2))
                    .add(jPanel10Layout.createSequentialGroup()
                        .add(11, 11, 11)
                        .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel8.add(jPanel10);
        jPanel10.setBounds(0, 12, 460, 90);

        jPanel5.add(jPanel8, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel5, java.awt.BorderLayout.CENTER);

        add(jPanel3, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        radio1Btn_process();
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        radio2Btn_process();
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
    
    SanBootView view;
    BootHost selHost;
    Cluster selCluster;
    ButtonGroup grp = new ButtonGroup();
    MacFile macFile = new MacFile();
    String macFilePath;
    
    private void myInit( SanBootView view,BootHost selHost,Cluster selCluster ){
        this.view = view;
        this.selHost = selHost;
        this.selCluster = selCluster;

        macFilePath = macFile.createMacFile("c:/mac.txt");
        setupLanguage();
        grp.add( jRadioButton1 );
        grp.add( jRadioButton2 );
        jRadioButton1.setSelected( true );
        jTextArea1.setText(
            SanBootView.res.getString("FailoverWizardDialog.tip0")
        );
        
        setupHostList();
        radio1Btn_process();
    }
    
    private void setupLanguage(){
        jRadioButton1.setText(SanBootView.res.getString("SelectHostForNetBootPane.radioBtn.known"));
        jRadioButton2.setText(SanBootView.res.getString("SelectHostForNetBootPane.radioBtn.unknown"));
        jLabel1.setText(SanBootView.res.getString("SelectHostForNetBootPane.label.host"));
        jLabel2.setText(SanBootView.res.getString("SelectHostForNetBootPane.label.mac"));
    }
    
    private void setupHostList(){
        BootHost host;
        HostWrapper1 wrap;
        int selIndex=0;
        
        Vector list = view.initor.mdb.getAllRealBootHost();
        int size = list.size();
        for( int i=0; i<size;i++){
            host = (BootHost)list.elementAt(i);            
            if( selHost != null ){
                if( host.getUUID().equals( selHost.getUUID() ) ){
                    selIndex = i;
                }
            }else if( selCluster != null ){
                if( host.getUUID().equals( selCluster.getOneRealHost().getUUID() ) ){
                    selIndex = i;
                }
            }
            wrap = new HostWrapper1( host );
            jComboBox1.addItem( wrap );
        }
        
        if( size > 0 ){
            jComboBox1.setSelectedIndex( selIndex );
        }
    }
    
    public boolean isKnownHost(){
        return jRadioButton1.isSelected();
    }
    
    public boolean isUnknownHost(){
        return jRadioButton2.isSelected();
    }
    
    public SeledHostForNetBoot getSelectHostToNetBoot(){
        SeledHostForNetBoot selHostForNetBoot;
        if( jRadioButton1.isSelected() ){
            HostWrapper1 selectHost =(HostWrapper1)jComboBox1.getSelectedItem();
            selHostForNetBoot = new SeledHostForNetBoot( selectHost.host, "" );
        }else{
            String mac = jTextField1.getText().trim();
            selHostForNetBoot = new SeledHostForNetBoot( null, mac.toUpperCase() );
        }
        return selHostForNetBoot;
    }
    
    public boolean checkInputValidity(){ 
        if( jRadioButton1.isSelected() ){
            HostWrapper1 selectHost =(HostWrapper1)jComboBox1.getSelectedItem();
            if( selectHost == null ){
                JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("SelectHostForNetBootPane.error.noSelHost") 
                );
                return false;
            }
        }else{
            // 00-50-56-C0-00-08 
            // 00:50:56:C0:00:01
            String mac = jTextField1.getText().trim();
            
            if( !DhcpClientInfo.isValidMAC( mac ) ){
                JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("EditSubnetDialog.errMsg.invalidMAC")
                );
                return false;
            }
        }
        return true;
    }
    
    private void radio1Btn_process(){
        jLabel1.setEnabled( true );
        jComboBox1.setEnabled( true );
        jComboBox1.setOpaque( true );
        jComboBox2.setEnabled(false);
        jComboBox2.setOpaque(false);
        jLabel2.setEnabled( false );
        jTextField1.setEnabled( false );
        jTextField1.setOpaque( false );
    }
    
    private void radio2Btn_process(){
        jLabel1.setEnabled( false );
        jComboBox1.setEnabled( false );
        jComboBox1.setOpaque( false );
        jComboBox2.setEnabled(true);
        jComboBox2.setOpaque(true);
        jLabel2.setEnabled( true );
        jTextField1.setEnabled( true );
        jTextField1.setOpaque( true );
        try {
            setupHostMacList(macFilePath);
        } catch (IOException ex) {
            Logger.getLogger(SelectHostForNetBootPane.class.getName()).log(Level.SEVERE, null, ex);
        }
        jComboBox2.addActionListener(new ActionListener() {
            public void actionPerformed(final ActionEvent e){
                int index = jComboBox2.getSelectedIndex();
                String  content = jComboBox2.getSelectedItem().toString();
                jTextField1.setText(content);
            }
        });
//        if(jComboBox2.getSelectedItem() != null){
//          jTextField1.setText(jComboBox2.getSelectedItem().toString());
//        }
    }

    public void setupHostMacList(String filePath) throws IOException{
        ArrayList mac = MacFile.macList(filePath);
        Iterator it = mac.iterator();
        while(it.hasNext()){
            jComboBox2.addItem(it.next());
        }
    }
}

