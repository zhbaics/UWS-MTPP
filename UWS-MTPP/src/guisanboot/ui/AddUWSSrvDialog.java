/*
 * AddHostDialog.java
 *
 * Created on October 19, 2004, 8:19 PM
 */

package guisanboot.ui;

import java.awt.event.*;
import javax.swing.*;
import mylib.tool.*;
import guisanboot.data.*;

/**
 *
 * @author  Administrator
 */
public class AddUWSSrvDialog extends javax.swing.JDialog {     
    UWSrvNode srv = null;
    SanBootView view;
    Object[] values;
    
    /** Creates new form AddHostDialog */
    public AddUWSSrvDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public AddUWSSrvDialog( UWSrvNode srv,SanBootView view ){
        this(view,true);
        myInit( srv,view );
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("IP");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel4.setText("Port :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        jTextField2.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jTextField2, gridBagConstraints);

        jTextField3.setPreferredSize(new java.awt.Dimension(80, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jTextField3, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 35, 5));

        jPanel3.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(5, 1, 1, 1)));
        jButton1.setText("OK");
        jButton1.setPreferredSize(new java.awt.Dimension(75, 24));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel3.add(jButton1);

        jButton2.setText("Cancel");
        jButton2.setPreferredSize(new java.awt.Dimension(75, 24));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel3.add(jButton2);

        jPanel2.add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel2.add(jSeparator1, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        values = null;
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String _ip = jTextField2.getText().trim();
        if( _ip.equals("") ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("AddSWUSrvDialog.errMsg.noneIP")
            );
            return;
        }

        if( !Check.ipCheck( _ip ) ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("AddSWUSrvDialog.errMsg.invalidIP")
            );
            return;
        }

        String _port = jTextField3.getText().trim();
        if( _port.equals("") ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("AddSWUSrvDialog.errMsg.nonePort")
            );
            return;
        }

        if( !Check.digitCheck( _port ) ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("AddSWUSrvDialog.errMsg.invalidPort")
            );
            return;
        }

        int port = -1;
        try{
            port = Integer.parseInt( _port );
        }catch(Exception ex){}

        if( port <1 ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("AddSWUSrvDialog.errMsg.badPort")
            );
            return;
        }
        
        if( port >65535 ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("AddSWUSrvDialog.errMsg.badPort")
            );
            return;
        }
        
        UWSrvNode tmpSrv;
        if( srv!= null ){
            tmpSrv = new UWSrvNode( srv.getUws_id(), _ip, port,srv.getUws_psn());
        }else{
            tmpSrv = new UWSrvNode( -1,_ip,port,"" );
        }
        if( view.isSameUWSrv( _ip,tmpSrv ) ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("AddSWUSrvDialog.errMsg.sameHost")
            );
            return;
        }
        
        values = new Object[2];
        values[0] = _ip;
        values[1] = new Integer( port );
        
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new AddHostDialog(new javax.swing.JFrame(), true).setVisible( true );
    }
    
    ////GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    ////GEN-END:variables
    
    private void myInit( UWSrvNode _srv,SanBootView _view ){
        srv = _srv;
        view = _view;
        
        setupLanguage();
        setupHost();
        regKeyboardAction();
        
        jTextField2.requestFocus();   
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter(){
            public void keyPressed( KeyEvent e ){
                if( e.getKeyCode() == KeyEvent.VK_ENTER ){
                    // 在jCheckBox2上回车将导致直接开始 add host
                    jButton1ActionPerformed( null );
                }
            }
        });         
    }
    
    private void setupLanguage(){
        if( srv == null )
            setTitle( SanBootView.res.getString("AddSWUSrvDialog.dialogTitle.addHost"));
        else
            setTitle( SanBootView.res.getString("AddSWUSrvDialog.dialogTitle.editHost"));
        jButton2.setText( SanBootView.res.getString("common.button.cancel"));
        jButton1.setText(SanBootView.res.getString("common.button.ok"));
        jLabel3.setText( SanBootView.res.getString("AddSWUSrvDialog.label.ip"));
        jLabel4.setText(SanBootView.res.getString("AddSWUSrvDialog.label.port") );
    }

    private void regKeyboardAction(){
        jTextField2.registerKeyboardAction(
            new ActionListener(){
                public void actionPerformed(ActionEvent e){
                    jTextField3.requestFocus();
                }
            },
            KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0,true),
            JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT
        );    
    }
    
    private void setupHost(){
        if( srv != null ){
            jTextField2.setText( srv.getUws_ip() );
            jTextField3.setText( srv.getUws_port()+"" );
        }else{
            jTextField3.setText( UWSrvNode.MEDIA_SERVER_PORT + "" );
        }
    }

    public Object[] getValue(){
        return values;
    }
}
