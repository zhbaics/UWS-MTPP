/*
 * ReportConfDialog.java
 *
 * Created on 2007/5/21, ��AM�10:34
 */

package guisanboot.ui;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.border.*;
import java.util.*;
import java.util.regex.*;
import java.io.*;

import guisanboot.data.*;
import guisanboot.res.*;

/**
 *
 * @author  Administrator
 */
public class ReportConfDialog extends javax.swing.JDialog {
    ButtonGroup group = new ButtonGroup();
     
    MonthlyPane monthPane = new MonthlyPane();
    WeeklyPane weekPane = new WeeklyPane();
    
    /** Creates new form ReportConfDialog */
    public ReportConfDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public ReportConfDialog( SanBootView view,UWSRptConf conf ){
        this( view, true );
        myInit( view,conf );
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jPanel14 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jCheckBox3 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jTextField7 = new javax.swing.JTextField();
        jComboBox3 = new javax.swing.JComboBox();
        jComboBox4 = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(1, 1, 1, 1)));
        jPanel1.setToolTipText("");
        jPanel11.setLayout(new java.awt.BorderLayout());

        jPanel11.setBorder(new javax.swing.border.TitledBorder("Frequence"));
        jPanel13.setLayout(new java.awt.GridBagLayout());

        jPanel13.setBorder(new javax.swing.border.TitledBorder("Type"));
        jPanel13.setPreferredSize(new java.awt.Dimension(80, 10));
        jRadioButton1.setText("Daily");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel13.add(jRadioButton1, gridBagConstraints);

        jRadioButton2.setText("Weekly");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel13.add(jRadioButton2, gridBagConstraints);

        jRadioButton3.setText("Monthly");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel13.add(jRadioButton3, gridBagConstraints);

        jPanel11.add(jPanel13, java.awt.BorderLayout.WEST);

        jPanel14.setLayout(new java.awt.BorderLayout());

        jPanel14.setBorder(new javax.swing.border.TitledBorder(""));
        jPanel11.add(jPanel14, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel11, java.awt.BorderLayout.CENTER);

        jPanel12.setLayout(new java.awt.GridBagLayout());

        jPanel12.setBorder(new javax.swing.border.TitledBorder("Start time"));
        jPanel12.setPreferredSize(new java.awt.Dimension(90, 104));
        jLabel11.setText("Hour : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel12.add(jLabel11, gridBagConstraints);

        jComboBox5.setPreferredSize(new java.awt.Dimension(60, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel12.add(jComboBox5, gridBagConstraints);

        jPanel1.add(jPanel12, java.awt.BorderLayout.EAST);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel2.setPreferredSize(new java.awt.Dimension(0, 125));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel4.setPreferredSize(new java.awt.Dimension(727, 60));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel6.setBorder(new javax.swing.border.TitledBorder("email"));
        jCheckBox2.setText("Enable");
        jCheckBox2.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(1, 1, 1, 1)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel6.add(jCheckBox2, gridBagConstraints);

        jLabel3.setText("TO :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel6.add(jLabel3, gridBagConstraints);

        jTextField3.setPreferredSize(new java.awt.Dimension(250, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanel6.add(jTextField3, gridBagConstraints);

        jCheckBox3.setText("Send only when error occured");
        jCheckBox3.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(1, 1, 1, 1)));
        jCheckBox3.setPreferredSize(new java.awt.Dimension(215, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel6.add(jCheckBox3, gridBagConstraints);

        jLabel1.setText("Reserved :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel6.add(jLabel1, gridBagConstraints);

        jTextField1.setMinimumSize(new java.awt.Dimension(75, 24));
        jTextField1.setPreferredSize(new java.awt.Dimension(50, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanel6.add(jTextField1, gridBagConstraints);

        jLabel2.setText("days");
        jLabel2.setPreferredSize(new java.awt.Dimension(35, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanel6.add(jLabel2, gridBagConstraints);

        jButton4.setText("email test");
        jButton4.setMaximumSize(new java.awt.Dimension(79, 24));
        jButton4.setMinimumSize(new java.awt.Dimension(79, 24));
        jButton4.setPreferredSize(new java.awt.Dimension(120, 24));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel6.add(jButton4, gridBagConstraints);

        jPanel4.add(jPanel6, java.awt.BorderLayout.CENTER);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        jPanel7.setBorder(new javax.swing.border.TitledBorder("Message Limit"));
        jPanel7.setPreferredSize(new java.awt.Dimension(135, 10));
        jLabel4.setText("Success:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel7.add(jLabel4, gridBagConstraints);

        jLabel5.setText("Failure :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 0, 0);
        jPanel7.add(jLabel5, gridBagConstraints);

        jTextField4.setPreferredSize(new java.awt.Dimension(65, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel7.add(jTextField4, gridBagConstraints);

        jTextField5.setPreferredSize(new java.awt.Dimension(65, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(8, 2, 0, 0);
        jPanel7.add(jTextField5, gridBagConstraints);

        jPanel4.add(jPanel7, java.awt.BorderLayout.EAST);

        jPanel2.add(jPanel4, java.awt.BorderLayout.CENTER);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jCheckBox1.setText("Monitor UWS");
        jPanel5.add(jCheckBox1, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel5, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel3.setPreferredSize(new java.awt.Dimension(10, 145));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        jPanel8.setBorder(new javax.swing.border.TitledBorder("View Report"));
        jPanel8.setPreferredSize(new java.awt.Dimension(444, 68));
        jLabel6.setText("From :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel8.add(jLabel6, gridBagConstraints);

        jLabel7.setText("To :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel8.add(jLabel7, gridBagConstraints);

        jLabel8.setText("Year");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel8.add(jLabel8, gridBagConstraints);

        jLabel9.setText("Month");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel8.add(jLabel9, gridBagConstraints);

        jLabel10.setText("Day");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel8.add(jLabel10, gridBagConstraints);

        jTextField6.setPreferredSize(new java.awt.Dimension(45, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel8.add(jTextField6, gridBagConstraints);

        jComboBox1.setPreferredSize(new java.awt.Dimension(45, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel8.add(jComboBox1, gridBagConstraints);

        jComboBox2.setPreferredSize(new java.awt.Dimension(45, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel8.add(jComboBox2, gridBagConstraints);

        jTextField7.setPreferredSize(new java.awt.Dimension(6, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel8.add(jTextField7, gridBagConstraints);

        jComboBox3.setPreferredSize(new java.awt.Dimension(45, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel8.add(jComboBox3, gridBagConstraints);

        jComboBox4.setPreferredSize(new java.awt.Dimension(45, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel8.add(jComboBox4, gridBagConstraints);

        jButton3.setText("Generate Report");
        jButton3.setPreferredSize(new java.awt.Dimension(125, 20));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 0);
        jPanel8.add(jButton3, gridBagConstraints);

        jPanel3.add(jPanel8, java.awt.BorderLayout.CENTER);

        jPanel10.setLayout(new java.awt.BorderLayout());

        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 25, 5));

        jPanel9.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(5, 1, 5, 1)));
        jButton1.setText("OK");
        jButton1.setPreferredSize(new java.awt.Dimension(75, 24));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel9.add(jButton1);

        jButton2.setText("Cancel");
        jButton2.setPreferredSize(new java.awt.Dimension(75, 24));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel9.add(jButton2);

        jButton5.setText("Apply");
        jButton5.setPreferredSize(new java.awt.Dimension(75, 24));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jPanel9.add(jButton5);

        jPanel10.add(jPanel9, java.awt.BorderLayout.SOUTH);

        jPanel10.add(jSeparator1, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel10, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        applyBtn_actionPerformed();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        sendMailBtn_actionPerformed();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        generateReportBtn_actionPerformed();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        okButton_actionPerformed( evt );
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        monthlyRadioButton_actionPerformed();
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        weeklyRadioButton_actionPerformed();
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        dailyRadioButton_actionPerformed( );
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReportConfDialog(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }
    
    ////GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    ////GEN-END:variables
    
    SanBootView view;
    UWSRptConf conf;
    
    private void  myInit( SanBootView _view,UWSRptConf _conf  ){
        view = _view;
        conf = _conf;
        
        group.add( jRadioButton1 );
        group.add( jRadioButton2 );
        group.add( jRadioButton3 );
        
        setupLanguage();
        setupTime();
        
        setupUI();
    }
    
    private void setupLanguage(){
        setTitle( SanBootView.res.getString("ReportConfDialog.borderTitle") );
        ((TitledBorder)jPanel11.getBorder()).setTitle(
            SanBootView.res.getString("ReportConfDialog.borderTitle.frequence")
        );
        ((TitledBorder)jPanel6.getBorder()).setTitle(
            SanBootView.res.getString("ReportConfDialog.borderTitle.email")
        );
        ((TitledBorder)jPanel7.getBorder()).setTitle(
            SanBootView.res.getString("ReportConfDialog.borderTitle.msgLimit")
        );
        ((TitledBorder)jPanel8.getBorder()).setTitle(
            SanBootView.res.getString("ReportConfDialog.borderTitle.view")
        );
        ((TitledBorder)jPanel12.getBorder()).setTitle(
            SanBootView.res.getString("ReportConfDialog.borderTitle.startime")
        );
        ((TitledBorder)jPanel13.getBorder()).setTitle(
            SanBootView.res.getString("ReportConfDialog.borderTitle.type")
        );
        ((TitledBorder)jPanel6.getBorder()).setTitle(
            SanBootView.res.getString("ReportConfDialog.borderTitle.email")
        );
        jRadioButton1.setText(  SanBootView.res.getString("ReportConfDialog.radioBtn.dialy") );
        jRadioButton2.setText(  SanBootView.res.getString("ReportConfDialog.radioBtn.weekly") );
        jRadioButton3.setText(  SanBootView.res.getString("ReportConfDialog.radioBtn.monthly") );
        
        jLabel1.setText( SanBootView.res.getString("ReportConfDialog.label.reserved"));
        jLabel2.setText( SanBootView.res.getString("ReportConfDialog.label.days"));
        jLabel11.setText( SanBootView.res.getString("ReportConfDialog.label.hour"));
        jLabel3.setText(  SanBootView.res.getString("ReportConfDialog.label.accept") );
        jLabel4.setText( SanBootView.res.getString("ReportConfDialog.label.success") );
        jLabel5.setText( SanBootView.res.getString("ReportConfDialog.label.failure") );
        jLabel6.setText( SanBootView.res.getString("ReportConfDialog.label.from"));
        jLabel7.setText( SanBootView.res.getString("ReportConfDialog.label.to") );
        jLabel8.setText( SanBootView.res.getString("ReportConfDialog.label.year"));
        jLabel9.setText( SanBootView.res.getString("ReportConfDialog.label.month"));
        jLabel10.setText( SanBootView.res.getString("ReportConfDialog.label.day") );
        
        jCheckBox2.setText(  SanBootView.res.getString("ReportConfDialog.checkbox.sendmail") ); 
        jCheckBox3.setText( SanBootView.res.getString("ReportConfDialog.checkbox.sendmail1") );
        jCheckBox1.setText( SanBootView.res.getString("ReportConfDialog.checkbox.startRpt") );
        
        jButton1.setText( SanBootView.res.getString("common.button.ok") );
        jButton2.setText( SanBootView.res.getString("common.button.cancel") );
        jButton3.setText( SanBootView.res.getString("ReportConfDialog.btn.generate") );
        jButton4.setText( SanBootView.res.getString("ReportConfDialog.btn.sendemail") );
        jButton5.setText( SanBootView.res.getString("ReportConfDialog.btn.apply") );
    }
    
    private void setupTime(){
        Vector vt1 = new Vector( 24 );
        for( int i=0; i<24; i++ ){ // 有效范围0-23
            vt1.addElement( i+"" );
        }
        jComboBox5.setModel( new DefaultComboBoxModel( vt1 ) );
            
        Vector vt3 = new Vector(12);
        for( int i=1; i<13; i++ ){
            vt3.addElement( i+"" );
        }
        jComboBox1.setModel( new DefaultComboBoxModel( vt3 ) );
        
        Vector vt4 = new Vector(31);
        for( int i=1; i<32; i++ ){
            vt4.addElement( i+"" );
        }
        jComboBox2.setModel( new DefaultComboBoxModel( vt4 ) );
        
        Vector vt5 = new Vector(12);
        for( int i=1; i<13; i++ ){
            vt5.addElement( i+"" );
        }
        jComboBox3.setModel( new DefaultComboBoxModel( vt5 ) );
        
        Vector vt6 = new Vector(31);
        for( int i=1; i<32; i++ ){
            vt6.addElement( i+"" );
        }
        jComboBox4.setModel( new DefaultComboBoxModel( vt6 ) );
    }
    
    private void setupUI(){
        jCheckBox1.setSelected( conf.isMonUWS() );
        jCheckBox2.setSelected( conf.isSendMail() );
        jTextField1.setText( conf.getRemainDays()+"" );
        jTextField3.setText( conf.getMailTo() );
        jCheckBox3.setSelected( conf.isSendWhenErrOcured() );
        jTextField4.setText( conf.getOkRecNum()+"" );
        jTextField5.setText( conf.getFailedRecNum()+"" );
        
        jComboBox5.setSelectedItem( conf.getHourFromSendTime()+"" );
        
        int type = conf.getFreqType();
        if( type == UWSRptConf.TYPE_FREQ_DAILY ){
            jRadioButton1.setSelected( true );
            ((TitledBorder)jPanel14.getBorder()).setTitle(
                SanBootView.res.getString("ReportConfDialog.borderTitle.daily")
            );
        }else if( type == UWSRptConf.TYPE_FREQ_WEEKLY ){
            jRadioButton2.setSelected( true );
            weeklyRadioButton_actionPerformed();
            Vector wlist = conf.getDayList();
            weekPane.initWeekPane( wlist );
        }else if ( type == UWSRptConf.TYPE_FREQ_MONTHLY ) {
            jRadioButton3.setSelected( true );
            monthlyRadioButton_actionPerformed();
            Vector mlist = conf.getDayList();
            monthPane.initMonthPane( mlist );
        }else{
            jRadioButton1.setSelected( true );
            ((TitledBorder)jPanel14.getBorder()).setTitle(
                SanBootView.res.getString("ReportConfDialog.borderTitle.daily")
            );
        }
    }
    
    void dailyRadioButton_actionPerformed() {
        jPanel14.removeAll();
        ((TitledBorder)jPanel14.getBorder()).setTitle(
            SanBootView.res.getString("ReportConfDialog.borderTitle.daily")
        );
        jPanel14.validate();
        jPanel14.repaint();
    }
    
    void weeklyRadioButton_actionPerformed() {
        jPanel14.removeAll();
        ((TitledBorder)jPanel14.getBorder()).setTitle(
            SanBootView.res.getString("ReportConfDialog.borderTitle.weekly")
        );
        jPanel14.add(weekPane,BorderLayout.CENTER);
        jPanel14.validate();
        jPanel14.repaint();
    }

    void monthlyRadioButton_actionPerformed() {
        jPanel14.removeAll();
        ((TitledBorder)jPanel14.getBorder()).setTitle(
            SanBootView.res.getString("ReportConfDialog.borderTitle.monthly")  
        );
        jPanel14.add( monthPane,BorderLayout.CENTER );
        jPanel14.validate();
        jPanel14.repaint();
    }
    
    void okButton_actionPerformed( ActionEvent e ){
        String mail;
        Pattern pattern;
        Matcher matcher;
        
        UWSRptConf newconf = new UWSRptConf();
        
        newconf.setMonUWSFlag( jCheckBox1.isSelected() );
        boolean sendMailFlag = jCheckBox2.isSelected();
        newconf.setSendMailFlag( sendMailFlag );
        newconf.setSendWhenErrOcuredFlag( jCheckBox3.isSelected() );
        
        String _keep_day = jTextField1.getText().trim();
        try{
            int keep_day = Integer.parseInt( _keep_day );
            if( keep_day <1 || keep_day >365 ){
                JOptionPane.showMessageDialog( this,
                    SanBootView.res.getString("ReportConfDialog.error.badRemainDay")
                );
                return;
            }
            newconf.setRemainDays( keep_day );
        }catch(Exception ex){
            JOptionPane.showMessageDialog( this,
                SanBootView.res.getString("ReportConfDialog.error.badRemainDay")
            );
            return;
        }
        
        String mailList = jTextField3.getText().trim();
        if( sendMailFlag ){
            if( mailList.equals("") ){
                JOptionPane.showMessageDialog( this,
                    SanBootView.res.getString("ReportConfDialog.error.noneEMail")
                );
                return;
            }
        }
        
        if( !mailList.equals("") ){
            String[] list = Pattern.compile(" ").split( mailList );
            pattern = Pattern.compile("^([^@]+)@([^\\.@]+\\.)+([^\\.@]+)$");
            for( int i=0; i<list.length; i++ ){
                mail = list[i].trim();
                if( !mail.equals("") ){
                    matcher = pattern.matcher( mail );
                    if( !matcher.find() ){
                        JOptionPane.showMessageDialog( this,
                            SanBootView.res.getString("ReportConfDialog.error.badmail") + ": " +mail
                        );
                        return;
                    }
                }
            }
        }
        newconf.setMailTo( mailList );
        
        String _ok_num = jTextField4.getText().trim();
        try{
            int ok_num = Integer.parseInt( _ok_num );
            if( ok_num <=0 || ok_num >1000 ){
                JOptionPane.showMessageDialog( this,
                    SanBootView.res.getString("ReportConfDialog.error.badOkRecNum")
                );
                return;
            }
            newconf.setOkRecNum( ok_num );
        }catch(Exception ex){
            JOptionPane.showMessageDialog( this,
                SanBootView.res.getString("ReportConfDialog.error.badOkRecNum")
            );
            return;
        }
       
        String _failed_num = jTextField5.getText().trim();
        try{
            int failed_num = Integer.parseInt( _failed_num );
            if( failed_num <=0 || failed_num >1000 ){
                JOptionPane.showMessageDialog( this,
                    SanBootView.res.getString("ReportConfDialog.error.badFailedRecNum")
                );
                return;
            }
            newconf.setFailedRecNum( failed_num );
        }catch(Exception ex){
            JOptionPane.showMessageDialog( this,
                SanBootView.res.getString("ReportConfDialog.error.badFailedRecNum")
            );
            return;
        }
        
        String hour = (String)jComboBox5.getSelectedItem();
        if( hour.length() ==1 ){
            hour = "0" + hour;
        }
        newconf.setSendTime( hour + "0000" );
        
        String freq = "";
        if( jRadioButton1.isSelected() ){ // daily
            freq = "3";
        }else if( jRadioButton2.isSelected() ){ // weekly
            String dayweek = weekPane.getInfo();
            if( dayweek.equals("") ){
                JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("ReportConfDialog.errmsg.noDayofWeek")
                );
                return;
            }
            freq ="1;"+dayweek;
        }else{ //monthly
            String daymonth = monthPane.getInfo();
            if( daymonth.equals("") ){
                JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("ReportConfDialog.errmsg.noDayofMonth")
                );
                return;
            }
            freq = "2;"+daymonth;
        }
        newconf.setSendFreq( freq );
System.out.println(" freq list: "+freq);
        
        // 先在本地生成一个零时文件
        File tmpFile = view.initor.mdb.createTmpFile( ResourceCenter.PREFIX,ResourceCenter.SUFFIX_UWSCONF );
        if( tmpFile == null ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("common.errmsg.crtTmpFileLocallyFailed")
            );
            return;
        }
        
        // 发送UWS Conf的内容
        if( !view.initor.mdb.sendFileToServer( tmpFile.getName(), newconf.getContents() ) ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("common.errmsg.sendFileFailed")+" : "+
                view.initor.mdb.getErrorMessage()
            );
            tmpFile.delete();
            return;
        }    
        tmpFile.delete();
        
        String src = ResourceCenter.TMP_DIR + tmpFile.getName();
System.out.println("src: "+src +" dest: "+ResourceCenter.CONF_UWS_REPORT);
        if( !view.initor.mdb.moveFile( src, ResourceCenter.CONF_UWS_REPORT ) ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("ReportConfDialog.error.saveRptConf")+" : "+
                view.initor.mdb.getErrorMessage()
            );
        }else{
            boolean isOk = view.initor.mdb.reloadUWSConf();
            if( isOk ){
                dispose();
                
                JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("ReportConfDialog.error.saveRptConfOK")
                );
            }else{
                if( view.initor.mdb.getErrorCode() == 1 ){
                    dispose();
                    
                    JOptionPane.showMessageDialog(this,
                        SanBootView.res.getString("ReportConfDialog.error.restartRptMon")
                    );
                }else{
                    JOptionPane.showMessageDialog(this,
                        SanBootView.res.getString("ReportConfDialog.error.reloadRptConf")+" : "+
                            view.initor.mdb.getErrorMessage()
                    );
                }
            }
        }
    }
    
    void generateReportBtn_actionPerformed(){
        int bMon=0,eMon=0,bDay=0,eDay=0,bYear,eYear;
        
        String _bYear = jTextField6.getText().trim();
        try{
            bYear = Integer.parseInt( _bYear );
            if( bYear < 2001  || bYear >9999 ){
                JOptionPane.showMessageDialog( this,
                    SanBootView.res.getString("ReportConfDialog.error.badBeginYear")
                );
                return;
            }
        }catch( Exception ex ){
            JOptionPane.showMessageDialog( this,
                SanBootView.res.getString("ReportConfDialog.error.badBeginYear")
            );
            return;
        }
        
        String _eYear = jTextField7.getText().trim();
        try{
            eYear = Integer.parseInt( _eYear );
            if( eYear < 2001 || eYear >9999 ){
                JOptionPane.showMessageDialog( this,
                    SanBootView.res.getString("ReportConfDialog.error.badEndYear")
                );
                return;
            }
        }catch(Exception ex ){
            JOptionPane.showMessageDialog( this,
                SanBootView.res.getString("ReportConfDialog.error.badEndYear")
            );
            return;
        }
        
        String _bMon = (String)jComboBox1.getSelectedItem();
        try{
            bMon = Integer.parseInt( _bMon );
        }catch(Exception ex){}
        
        String _bDay = (String)jComboBox2.getSelectedItem();
        try{
            bDay = Integer.parseInt( _bDay );
        }catch(Exception ex){}
        
        String _eMon = (String)jComboBox3.getSelectedItem();
        try{
            eMon = Integer.parseInt( _eMon );
        }catch(Exception ex){}
        
        String _eDay = (String)jComboBox4.getSelectedItem();
        try{
            eDay = Integer.parseInt( _eDay );
        }catch(Exception ex){}
        
        // 检查日期是否有矛盾
        if( bYear > eYear ){
            JOptionPane.showMessageDialog( this,
                SanBootView.res.getString("ReportConfDialog.error.mismatched")
            );
            return;
        }else{
            if( bYear == eYear ){
                if( bMon > eMon ){
                    JOptionPane.showMessageDialog( this,
                        SanBootView.res.getString("ReportConfDialog.error.mismatched")
                    );
                    return;
                }else{
                    if( bMon == eMon ){
                        if( bDay > eDay ){
                            JOptionPane.showMessageDialog( this,
                                SanBootView.res.getString("ReportConfDialog.error.mismatched")
                            );
                            return;
                        }
                    }
                }
            }
        }
                
        if( _bMon.length() == 1 ){
            _bMon = "0" + _bMon;
        }
        
        if( _eMon.length() == 1 ){
            _eMon= "0" + _eMon;
        }
        
        if( _bDay.length() == 1 ){
            _bDay = "0" + _bDay;
        }
        
        if( _eDay.length() == 1 ){
            _eDay = "0" + _eDay;
        }
        
        String begin = _bYear + _bMon + _bDay + "000000";
        String end   = _eYear + _eMon + _eDay + "125959";
        
        GenerateTmpRptThread thread = new GenerateTmpRptThread( view, begin, end );
        view.startupProcessDiag( 
            SanBootView.res.getString("View.pdiagTitle.generateRpt"),
            SanBootView.res.getString("View.pdiagTip.generateRpt"),
            thread
        );
        
        boolean retval = thread.getRetVal();
        if( !retval ){
            JOptionPane.showMessageDialog(view,
                SanBootView.res.getString("ReportConfDialog.error.generateTmpRpt") + ": " +
                thread.getErrorMsg()
            );
        }
    }
    
    void sendMailBtn_actionPerformed(){
        boolean isOk = view.initor.mdb.rptMailTest();
        if( isOk ){
            JOptionPane.showMessageDialog(view,
                SanBootView.res.getString("ReportConfDialog.error.sendRptMailOk")
            );
        }else{
            JOptionPane.showMessageDialog(view,
                SanBootView.res.getString("ReportConfDialog.error.sendRptMailFailed") + " : "+
                    view.initor.mdb.getErrorMessage()
            );
        }
    }
    
    void applyBtn_actionPerformed(){
        String mail;
        Pattern pattern;
        Matcher matcher;
        
        UWSRptConf newconf = new UWSRptConf();
        
        newconf.setMonUWSFlag( jCheckBox1.isSelected() );
        boolean sendMailFlag = jCheckBox2.isSelected();
        newconf.setSendMailFlag( sendMailFlag );
        newconf.setSendWhenErrOcuredFlag( jCheckBox3.isSelected() );
        
        String _keep_day = jTextField1.getText().trim();
        try{
            int keep_day = Integer.parseInt( _keep_day );
            if( keep_day <1 || keep_day >365 ){
                JOptionPane.showMessageDialog( this,
                    SanBootView.res.getString("ReportConfDialog.error.badRemainDay")
                );
                return;
            }
            newconf.setRemainDays( keep_day );
        }catch(Exception ex){
            JOptionPane.showMessageDialog( this,
                SanBootView.res.getString("ReportConfDialog.error.badRemainDay")
            );
            return;
        }
        
        String mailList = jTextField3.getText().trim();
        if( sendMailFlag ){
            if( mailList.equals("") ){
                JOptionPane.showMessageDialog( this,
                    SanBootView.res.getString("ReportConfDialog.error.noneEMail")
                );
                return;
            }
        }
        
        if( !mailList.equals("") ){
            String[] list = Pattern.compile(" ").split( mailList );
            pattern = Pattern.compile("^([^@]+)@([^\\.@]+\\.)+([^\\.@]+)$");
            for( int i=0; i<list.length; i++ ){
                mail = list[i].trim();
                if( !mail.equals("") ){
                    matcher = pattern.matcher( mail );
                    if( !matcher.find() ){
                        JOptionPane.showMessageDialog( this,
                            SanBootView.res.getString("ReportConfDialog.error.badmail") + ": " +mail
                        );
                        return;
                    }
                }
            }
        }
        newconf.setMailTo( mailList );
        
        String _ok_num = jTextField4.getText().trim();
        try{
            int ok_num = Integer.parseInt( _ok_num );
            if( ok_num <=0 || ok_num >1000 ){
                JOptionPane.showMessageDialog( this,
                    SanBootView.res.getString("ReportConfDialog.error.badOkRecNum")
                );
                return;
            }
            newconf.setOkRecNum( ok_num );
        }catch(Exception ex){
            JOptionPane.showMessageDialog( this,
                SanBootView.res.getString("ReportConfDialog.error.badOkRecNum")
            );
            return;
        }
       
        String _failed_num = jTextField5.getText().trim();
        try{
            int failed_num = Integer.parseInt( _failed_num );
            if( failed_num <=0 || failed_num >1000 ){
                JOptionPane.showMessageDialog( this,
                    SanBootView.res.getString("ReportConfDialog.error.badFailedRecNum")
                );
                return;
            }
            newconf.setFailedRecNum( failed_num );
        }catch(Exception ex){
            JOptionPane.showMessageDialog( this,
                SanBootView.res.getString("ReportConfDialog.error.badFailedRecNum")
            );
            return;
        }
        
        String hour = (String)jComboBox5.getSelectedItem();
        if( hour.length() ==1 ){
            hour = "0" + hour;
        }
        newconf.setSendTime( hour + "0000" );
        
        String freq = "";
        if( jRadioButton1.isSelected() ){ // daily
            freq = "3";
        }else if( jRadioButton2.isSelected() ){ // weekly
            String dayweek = weekPane.getInfo();
            if( dayweek.equals("") ){
                JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("ReportConfDialog.errmsg.noDayofWeek")
                );
                return;
            }
            freq ="1;"+dayweek;
        }else{ //monthly
            String daymonth = monthPane.getInfo();
            if( daymonth.equals("") ){
                JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("ReportConfDialog.errmsg.noDayofMonth")
                );
                return;
            }
            freq = "2;"+daymonth;
        }
        newconf.setSendFreq( freq );
System.out.println(" freq list: "+freq);
        
        // 先在本地生成一个零时文件
        File tmpFile = view.initor.mdb.createTmpFile( ResourceCenter.PREFIX,ResourceCenter.SUFFIX_UWSCONF );
        if( tmpFile == null ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("common.errmsg.crtTmpFileLocallyFailed")
            );
            return;
        }
        
        // 发送UWS Conf的内容
        if( !view.initor.mdb.sendFileToServer( tmpFile.getName(), newconf.getContents() ) ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("common.errmsg.sendFileFailed")+" : "+
                view.initor.mdb.getErrorMessage()
            );
            tmpFile.delete();
            return;
        }    
        tmpFile.delete();
        
        String src = ResourceCenter.TMP_DIR + tmpFile.getName();
System.out.println("src: "+src +" dest: "+ResourceCenter.CONF_UWS_REPORT);
        if( !view.initor.mdb.moveFile( src, ResourceCenter.CONF_UWS_REPORT ) ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("ReportConfDialog.error.saveRptConf")+" : "+
                view.initor.mdb.getErrorMessage()
            );
        }else{
            boolean isOk = view.initor.mdb.reloadUWSConf();
            if( isOk ){
                JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("ReportConfDialog.error.saveRptConfOK")
                );
            }else{
                if( view.initor.mdb.getErrorCode() == 1 ){                    
                    JOptionPane.showMessageDialog(this,
                        SanBootView.res.getString("ReportConfDialog.error.restartRptMon")
                    );
                }else{
                    JOptionPane.showMessageDialog(this,
                        SanBootView.res.getString("ReportConfDialog.error.reloadRptConf")+" : "+
                            view.initor.mdb.getErrorMessage()
                    );
                }
            }
        }
    }
}
