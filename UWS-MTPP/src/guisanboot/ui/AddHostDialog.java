/*
 * AddHostDialog.java
 *
 * Created on October 19, 2004, 8:19 PM
 */

package guisanboot.ui;

import java.awt.event.*;
import javax.swing.*;
import mylib.tool.*;
import guisanboot.data.*;
import guisanboot.res.ResourceCenter;

/**
 *
 * @author  Administrator
 */
public class AddHostDialog extends javax.swing.JDialog {     
    BootHost host = null;
    String init_ip ="";
    int init_port=0;
    SanBootView view;
    Object[] values;
    
    /** Creates new form AddHostDialog */
    public AddHostDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public AddHostDialog( BootHost host,SanBootView view ){
        this(view,true);
        myInit( host,view,"",0 );
    }
    
    public AddHostDialog( String ip,int port,SanBootView view ){
        this(view,true);
        myInit( null,view,ip,port );
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("IP");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel4.setText("CMDP Port :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        jTextField2.setPreferredSize(new java.awt.Dimension(150, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jTextField2, gridBagConstraints);

        jTextField3.setPreferredSize(new java.awt.Dimension(80, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jTextField3, gridBagConstraints);

        jLabel1.setText("MTPP Port :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jTextField1.setPreferredSize(new java.awt.Dimension(83, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jTextField1, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 1, 1, 1));
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 35, 5));

        jButton1.setText("OK");
        jButton1.setPreferredSize(new java.awt.Dimension(75, 24));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1);

        jButton2.setText("Cancel");
        jButton2.setPreferredSize(new java.awt.Dimension(75, 24));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);

        jPanel2.add(jPanel3, java.awt.BorderLayout.CENTER);
        jPanel2.add(jSeparator1, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        values = null;
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String _ip = jTextField2.getText().trim();
        if( _ip.equals("") ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("AddHostDialog.errMsg.noneIP")
            );
            return;
        }
        if( !Check.ipCheck( _ip ) ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("AddHostDialog.errMsg.invalidIP")
            );
            return;
        }

        String _port1 = jTextField1.getText().trim(); // mtpp port
        if( _port1.equals("") ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("AddHostDialog.errMsg.nonePort")
            );
            return;
        }

        if( !Check.digitCheck( _port1 ) ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("AddHostDialog.errMsg.invalidPort") +" : " + _port1
            );
            return;
        }

        int port1 = -1;
        try{
            port1 = Integer.parseInt( _port1 );
        }catch(Exception ex){}

        if( ( port1 < 1 ) || ( port1 > 65535 ) ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("AddHostDialog.errMsg.badPort") +" : " + port1
            );
            return;
        }

        String _port = jTextField3.getText().trim();  // cmdp port
        int port = port1;
        if( ( this.host != null ) && host.isCMDPProtect() ){
            if( _port.equals("") ){
                JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("AddHostDialog.errMsg.nonePort")
                );
                return;
            }

            if( !Check.digitCheck( _port ) ){
                JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("AddHostDialog.errMsg.invalidPort")
                );
                return;
            }

            try{
                port = Integer.parseInt( _port );
            }catch(Exception ex){}

            if( ( port < 1 ) || ( port > 65535 ) ){
                JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("AddHostDialog.errMsg.badPort") +" : " + port
                );
                return;
            }
        }

        if( view.isSameHost( _ip,host ) ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("AddHostDialog.errMsg.sameHost")
            );
            return;
        }

        
        values = new Object[3];
        values[0] = _ip;
        values[1] = new Integer( port );    // cmdp port
        values[2] = new Integer( port1 );   // mtpp port
        
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new AddHostDialog(new javax.swing.JFrame(), true).setVisible( true );
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
    
    private void myInit( BootHost _host,SanBootView _view,String init_ip,int init_port ){
        host = _host;
        view = _view;
        this.init_ip = init_ip;
        this.init_port = init_port;
        
        setupLanguage();
        setupHost();
        regKeyboardAction();
        
        jTextField2.requestFocus();   
        
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter(){
            @Override public void keyPressed( KeyEvent e ){
                if( e.getKeyCode() == KeyEvent.VK_ENTER ){
                    // 在jTextField3上回车将导致直接开始 add host
                    jButton1ActionPerformed( null );
                }
            }
        });

        if( host != null ){
            if( host.isMTPPProtect() ){
                jPanel1.remove( this.jLabel4 );
                jPanel1.remove( this.jTextField3 );
            }
        }
    }
    
    private void setupLanguage(){
        if( host == null ){
            if( init_ip.equals("") ){
                setTitle( SanBootView.res.getString("AddHostDialog.dialogTitle.addHost"));
            }else{
                setTitle( SanBootView.res.getString("AddHostDialog.dialogTitle.aRbHost"));
            }            
        }else{
            setTitle( SanBootView.res.getString("AddHostDialog.dialogTitle.editHost"));           
        }
        jButton2.setText( SanBootView.res.getString("common.button.cancel"));
        jButton1.setText(SanBootView.res.getString("common.button.ok"));
        jLabel1.setText( SanBootView.res.getString("SelectProtectedSysVolPane.combox.lp") +
                SanBootView.res.getString("SelectBootHostPane.label.port") );
        jLabel3.setText( SanBootView.res.getString("AddHostDialog.label.ip"));
        jLabel4.setText(SanBootView.res.getString("SelectProtectedSysVolPane.combox.pp") +
                SanBootView.res.getString("SelectBootHostPane.label.port") );
    }
    
    private void regKeyboardAction(){
        jTextField2.registerKeyboardAction(
            new ActionListener(){
                public void actionPerformed(ActionEvent e){
                    jTextField3.requestFocus();
                }
            },
            KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0,true),
            JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT
        );
        jTextField3.registerKeyboardAction(
            new ActionListener(){
                public void actionPerformed(ActionEvent e){
                    jTextField1.requestFocus();
                }
            },
            KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0,true),
            JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT
        );
    }
    
    private void setupHost(){
        if( host != null ){
            jTextField2.setText( host.getIP() );
            jTextField3.setText( host.getPort() + "" );
            jTextField1.setText( host.getMtppPort()+"" );
        }else{
            if( init_ip.equals("") ){
                jTextField3.setText( ResourceCenter.CMDP_AGENT_PORT + "" );
                jTextField1.setText( ResourceCenter.MTPP_AGENT_PORT + "");
            }else{
                jTextField2.setText( init_ip );
                jTextField3.setText( init_port + "" );
                jTextField1.setText( ResourceCenter.MTPP_AGENT_PORT + "" );
            }
        }
    }

    public Object[] getValue(){
        return values;
    }
}
