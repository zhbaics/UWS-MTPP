/*
 * RunningTaskForDRPane.java
 *
 * Created on 2006/12/29,��AM 9:52
 */

package guisanboot.ui;

import java.awt.*;
import javax.swing.*;
import javax.swing.table.*;
import java.util.*;
import mylib.UI.*;
import guisanboot.data.*;
import guisanboot.res.ResourceCenter;
import java.util.regex.Pattern;


/**
 *
 * @author  Administrator
 */
public class RunningTaskForDRPane extends javax.swing.JPanel {
    /** Creates new form RunningTaskForDRPane */
    public RunningTaskForDRPane() {
        initComponents();
    }

    public RunningTaskForDRPane( SanBootView view ) {
        this( view,ResourceCenter.CMD_TYPE_MTPP,false );
    }

    public RunningTaskForDRPane( SanBootView view,boolean isSwitchDisk  ) {
        this( view,ResourceCenter.CMD_TYPE_MTPP,isSwitchDisk );
    }

    public RunningTaskForDRPane( SanBootView view,int mode,boolean isSwitchDisk ) {
        this();
        myInit( view,mode,isSwitchDisk );
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel13 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextArea7 = new javax.swing.JTextArea();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextArea6 = new javax.swing.JTextArea();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(20, 10));
        add(jPanel1, java.awt.BorderLayout.WEST);

        jPanel2.setPreferredSize(new java.awt.Dimension(20, 10));
        add(jPanel2, java.awt.BorderLayout.EAST);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel4.setPreferredSize(new java.awt.Dimension(10, 30));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jTextArea1.setLineWrap(true);
        jTextArea1.setDisabledTextColor(java.awt.Color.black);
        jTextArea1.setEnabled(false);
        jTextArea1.setOpaque(false);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel4.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel4, java.awt.BorderLayout.NORTH);

        jPanel6.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 1, 3, 1));
        jPanel6.setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.BorderLayout());
        jPanel5.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel6.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel13.setLayout(new java.awt.BorderLayout());

        jPanel12.setLayout(new java.awt.GridBagLayout());
        jPanel13.add(jPanel12, java.awt.BorderLayout.WEST);

        jPanel6.add(jPanel13, java.awt.BorderLayout.SOUTH);

        jPanel3.add(jPanel6, java.awt.BorderLayout.CENTER);

        jPanel7.setPreferredSize(new java.awt.Dimension(5, 100));
        jPanel7.setLayout(new java.awt.BorderLayout());

        jPanel15.setLayout(new java.awt.BorderLayout());

        jTextArea7.setLineWrap(true);
        jTextArea7.setDisabledTextColor(java.awt.Color.black);
        jTextArea7.setEnabled(false);
        jScrollPane8.setViewportView(jTextArea7);

        jPanel15.add(jScrollPane8, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Connect", jPanel15);

        jPanel8.setLayout(new java.awt.BorderLayout());

        jTextArea2.setLineWrap(true);
        jTextArea2.setDisabledTextColor(java.awt.Color.black);
        jTextArea2.setEnabled(false);
        jScrollPane3.setViewportView(jTextArea2);

        jPanel8.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Stop", jPanel8);

        jPanel14.setLayout(new java.awt.BorderLayout());

        jTextArea3.setLineWrap(true);
        jTextArea3.setDisabledTextColor(java.awt.Color.black);
        jTextArea3.setEnabled(false);
        jScrollPane4.setViewportView(jTextArea3);

        jPanel14.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Load Info.", jPanel14);

        jPanel9.setLayout(new java.awt.BorderLayout());

        jTextArea4.setLineWrap(true);
        jTextArea4.setDisabledTextColor(java.awt.Color.black);
        jTextArea4.setEnabled(false);
        jScrollPane5.setViewportView(jTextArea4);

        jPanel9.add(jScrollPane5, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Assign", jPanel9);

        jPanel10.setLayout(new java.awt.BorderLayout());

        jTextArea5.setLineWrap(true);
        jTextArea5.setDisabledTextColor(java.awt.Color.black);
        jTextArea5.setEnabled(false);
        jScrollPane6.setViewportView(jTextArea5);

        jPanel10.add(jScrollPane6, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Start", jPanel10);

        jPanel11.setLayout(new java.awt.BorderLayout());

        jTextArea6.setLineWrap(true);
        jTextArea6.setDisabledTextColor(java.awt.Color.black);
        jTextArea6.setEnabled(false);
        jScrollPane7.setViewportView(jTextArea6);

        jPanel11.add(jScrollPane7, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Reboot", jPanel11);

        jPanel7.add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel7, java.awt.BorderLayout.SOUTH);

        add(jPanel3, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextArea jTextArea5;
    private javax.swing.JTextArea jTextArea6;
    private javax.swing.JTextArea jTextArea7;
    // End of variables declaration//GEN-END:variables
    
    Vector<InitTask> taskList = new Vector<InitTask>();
    GeneralEditableTable table = new GeneralEditableTable();
    SanBootView view;
    int mode;
    boolean isSwitchDisk;

    public static int CONNECT_AGENT_ROW = 0;
    public static int STOP_SERV_ROW = 1;
    public static int LOAD_INFO_ROW = 2;
    public static int ASSIGN_DRIVER_ROW = 3;
    public static int START_SERV_ROW = 4;
    public static int REBOOT_ROW = 5;
    
    private void myInit( SanBootView _view,int mode,boolean isSwitchDisk ){
        view = _view;
        this.mode = mode;
        this.isSwitchDisk = isSwitchDisk;
        setupLanguage();
        
        jScrollPane2.getViewport().add( table,null );
        jScrollPane2.getViewport().setBackground( Color.white );
        
        jTextArea1.setText(
            SanBootView.res.getString("InitBootHostWizardDialog.tip7")
        );
        if( this.mode == ResourceCenter.CMD_TYPE_CMDP ){
            jTabbedPane1.remove( this.jPanel11 );
        }
        if( this.isSwitchDisk ){
            jTabbedPane1.remove( this.jPanel14 );
            jTabbedPane1.remove( this.jPanel11 );
        }
        assembleTask();
        setupTable();
    }
    
    private void setupLanguage(){        
        int index = jTabbedPane1.indexOfComponent(jPanel15);
        jTabbedPane1.setTitleAt( index, 
            SanBootView.res.getString("RunningTaskForDRPane.label.connect")
        );
        index = jTabbedPane1.indexOfComponent(jPanel8);
        jTabbedPane1.setTitleAt( index, 
            SanBootView.res.getString("RunningTaskForDRPane.label.stopServ")
        );
        index = jTabbedPane1.indexOfComponent(jPanel14);
        jTabbedPane1.setTitleAt(index,
            SanBootView.res.getString("RunningTaskForDRPane.label.loadInfo")
        );
        index = jTabbedPane1.indexOfComponent(jPanel9);
        jTabbedPane1.setTitleAt( index,
            SanBootView.res.getString("RunningTaskForDRPane.label.chgLabel")
        );
        index = jTabbedPane1.indexOfComponent(jPanel10);
        jTabbedPane1.setTitleAt( index,
            SanBootView.res.getString("RunningTaskForDRPane.label.startServ")
        );
        index = jTabbedPane1.indexOfComponent(jPanel11);
        jTabbedPane1.setTitleAt(index,
            SanBootView.res.getString("RunningTaskForDRPane.label.reboot")
        );
    }
    
    public void assembleTask(){
        InitTask task;
        
        taskList.removeAllElements();
        int cnt = 0;    
        
        task = new InitTask();
        cnt++;
        task.seq = cnt;
        task.task = SanBootView.res.getString("common.DrRecover.connect");
        task.status = InitTask.INIT_TASK_STA_READY;
        taskList.addElement( task );
        RunningTaskForDRPane.CONNECT_AGENT_ROW = (cnt-1);
         
        task = new InitTask();
        cnt++;
        task.seq = cnt;
        task.task = SanBootView.res.getString("common.DrRecover.stopServ");
        task.status = InitTask.INIT_TASK_STA_READY;
        taskList.addElement( task );
        RunningTaskForDRPane.STOP_SERV_ROW = (cnt-1);

        if( !this.isSwitchDisk ){
            task = new InitTask();
            cnt++;
            task.seq = cnt;
            task.task = SanBootView.res.getString("common.DrRecover.loadInfo");
            task.status = InitTask.INIT_TASK_STA_READY;
            taskList.addElement( task );
            RunningTaskForDRPane.LOAD_INFO_ROW = (cnt-1);
        }else{
            RunningTaskForDRPane.LOAD_INFO_ROW = 5;
        }

        task = new InitTask();
        cnt++;
        task.seq = cnt;
        task.task = SanBootView.res.getString("common.DrRecover.chgLabel");
        task.status = InitTask.INIT_TASK_STA_READY;
        taskList.addElement( task );
        RunningTaskForDRPane.ASSIGN_DRIVER_ROW = (cnt-1);
        
        task = new InitTask();
        cnt++;
        task.seq = cnt;
        task.task = SanBootView.res.getString("common.DrRecover.startServ");
        task.status = InitTask.INIT_TASK_STA_READY;
        taskList.addElement( task );
        RunningTaskForDRPane.START_SERV_ROW = (cnt-1);

        if( !this.isSwitchDisk ){
            if( this.mode == ResourceCenter.CMD_TYPE_MTPP ){
                task = new InitTask();
                cnt++;
                task.seq = cnt;
                task.task = SanBootView.res.getString("common.DrRecover.reboot");
                task.status = InitTask.INIT_TASK_STA_READY;
                taskList.addElement( task );
                RunningTaskForDRPane.REBOOT_ROW = (cnt-1);
            }
        }
    }
    
    public void setupTable(){
        int i;
        Object[][] data;
        
        int num = taskList.size();

        data = new Object[2+num][3]; //seq,task,status
        data[0][0] = "" + num;    // row num
        data[0][1] = "" + 3;      // col num

        data[1][0] = SanBootView.res.getString("TaskConfigPane.table.task.seq");
        data[1][1] = SanBootView.res.getString("TaskConfigPane.table.task.task");
        data[1][2] = SanBootView.res.getString("TaskConfigPane.table.task.status");
        
        for( i=0; i<num; i++ ){
            InitTask task = (InitTask)taskList.elementAt(i);
            
            data[2+i][0] = task.seq+"";
            data[2+i][1] = task.task;
            data[2+i][2] = InitTask.getTaskStatusStr( task.status );
        }
        
        table.setTableModel( data );
        table.setDefaultLook();

        TableColumnModel tableColumnModel = table.getColumnModel();
        int colNum = tableColumnModel.getColumnCount();
        for( i=0;i<colNum;i++ ){
            tableColumnModel.getColumn(i).setCellRenderer(new BrowserTableCellRenderer());
        }

        tableColumnModel.getColumn(0).setWidth( 50 );
        tableColumnModel.getColumn(1).setWidth( 300 );
        tableColumnModel.getColumn(2).setWidth( 100 );
        for( i=0;i<colNum;i++ )
            table.sizeColumnsToFit(i);

        table.getTableHeader().setBorder( BorderFactory.createRaisedBevelBorder() );
        table.getTableHeader().setReorderingAllowed(false);
    }
    
    public void setTaskStatus( String val,int row,int col ){
        AbstractTableModel model = (AbstractTableModel)table.getModel();
        model.setValueAt( val, row, col );
    }

    public void setCurTabPane( int which ){
        if( which == RunningTaskForDRPane.CONNECT_AGENT_ROW ){
            jTabbedPane1.setSelectedComponent( jPanel15 );
        }else if( which == RunningTaskForDRPane.STOP_SERV_ROW ){
            jTabbedPane1.setSelectedComponent( jPanel8 );
        }else if( which == RunningTaskForDRPane.LOAD_INFO_ROW ){
            jTabbedPane1.setSelectedComponent( jPanel14 );
        }else if( which == RunningTaskForDRPane.ASSIGN_DRIVER_ROW ){
            jTabbedPane1.setSelectedComponent( jPanel9 );
        }else if( which == RunningTaskForDRPane.START_SERV_ROW ){
            jTabbedPane1.setSelectedComponent( jPanel10 );
        }else if( which == RunningTaskForDRPane.REBOOT_ROW ){
            jTabbedPane1.setSelectedComponent( jPanel11 );
        }
    }

    public void setCurTabPane1( int which ){
        switch( which ){
            case 0: // connect client
                jTabbedPane1.setSelectedComponent( jPanel15 );
                break;
            case 1: // stop services
                jTabbedPane1.setSelectedComponent( jPanel8 );
                break;
            case 2: // load info
                jTabbedPane1.setSelectedComponent( jPanel14 );
                break;
            case 3: // assign drivers
                jTabbedPane1.setSelectedComponent( jPanel9 );
                break;
            case 4: // start services
                jTabbedPane1.setSelectedComponent( jPanel10 );
                break;
            case 5: // reboot
                jTabbedPane1.setSelectedComponent( jPanel11 );
                break;
            default:
                break;
        }
    }
    
    int vertical_base = 50;
    public void printString( JTextArea ta,JScrollPane sp,String text ){
        String[] lines= Pattern.compile("\\n").split( text, -1 );

        for( int i=0; i<lines.length; i++ ){
            if( lines[i].equals("") ) continue;

            ta.append( lines[i] );
            ta.append( "\n" );
            ta.setPreferredSize( new Dimension( 0,vertical_base+=15 ) );
            ta.getCaret().setDot( ta.getText().length() );
            sp.scrollRectToVisible( ta.getVisibleRect() );
        }
    }

    public void setLogOnTabpane( String log,int which ){
        if( which == RunningTaskForDRPane.CONNECT_AGENT_ROW ){
            jTabbedPane1.setSelectedComponent( jPanel15 );
            printString( jTextArea7,jScrollPane8, log );
        }else if( which == RunningTaskForDRPane.STOP_SERV_ROW ){
            jTabbedPane1.setSelectedComponent( jPanel8 );
            printString( jTextArea2,jScrollPane3, log );
        }else if( which == RunningTaskForDRPane.LOAD_INFO_ROW ){
            jTabbedPane1.setSelectedComponent( jPanel14 );
            printString( jTextArea3,jScrollPane4, log );
        }else if( which == RunningTaskForDRPane.ASSIGN_DRIVER_ROW ){
            jTabbedPane1.setSelectedComponent( jPanel9 );
            printString( jTextArea4,jScrollPane5, log );
        }else if( which == RunningTaskForDRPane.START_SERV_ROW ){
            jTabbedPane1.setSelectedComponent( jPanel10 );
            printString( jTextArea5,jScrollPane6, log );
        }else if( which == RunningTaskForDRPane.REBOOT_ROW ){
            jTabbedPane1.setSelectedComponent( jPanel11 );
            printString( jTextArea6,jScrollPane7, log );
        }
    }

    public void setLogOnTabpane1( String log,int which ){
        switch( which ){
            case 0: // connect client
                jTabbedPane1.setSelectedComponent( jPanel15 );
                printString( jTextArea7,jScrollPane8, log );
                //jTextArea7.append( log + "\n" );
                break;
            case 1: // stop services
                jTabbedPane1.setSelectedComponent( jPanel8 );
                printString( jTextArea2,jScrollPane3, log );
                //jTextArea2.append( log + "\n" );
                break;
            case 2: // load info
                jTabbedPane1.setSelectedComponent( jPanel14 );
                printString( jTextArea3,jScrollPane4, log );
                //jTextArea3.append( log + "\n" );
                break;
            case 3: // assign drivers
                jTabbedPane1.setSelectedComponent( jPanel9 );
                printString( jTextArea4,jScrollPane5, log );
                //jTextArea4.append( log + "\n" );
                break;
            case 4: // start services 
                jTabbedPane1.setSelectedComponent( jPanel10 );
                printString( jTextArea5,jScrollPane6, log );
                //jTextArea5.append( log + "\n" );
                break;
            case 5: // reboot
                jTabbedPane1.setSelectedComponent( jPanel11 );
                printString( jTextArea6,jScrollPane7, log );
                //jTextArea6.append( log +"\n" );
                break;
            default:
                break;
        }
    }
    
    public String getTabStr( int which ){
        if( which == RunningTaskForDRPane.CONNECT_AGENT_ROW ){
            return SanBootView.res.getString("RunningTaskForDRPane.label.connect")+": ";
        }else if( which == RunningTaskForDRPane.STOP_SERV_ROW ){
            return SanBootView.res.getString("RunningTaskForDRPane.label.stopServ")+": ";
        }else if( which == RunningTaskForDRPane.LOAD_INFO_ROW ){
            return SanBootView.res.getString("RunningTaskForDRPane.label.loadInfo")+": ";
        }else if( which == RunningTaskForDRPane.ASSIGN_DRIVER_ROW ){
            return SanBootView.res.getString("RunningTaskForDRPane.label.chgLabel")+": ";
        }else if( which == RunningTaskForDRPane.START_SERV_ROW ){
            return SanBootView.res.getString("RunningTaskForDRPane.label.startServ")+": ";
        }else if( which == RunningTaskForDRPane.REBOOT_ROW ){
            return SanBootView.res.getString("RunningTaskForDRPane.label.reboot")+": ";
        }else{
            return "Unknown";
        }
    }

    public String getTabStr1( int which ){
        String ret;
        switch( which ){
            case 0:
                ret = SanBootView.res.getString("RunningTaskForDRPane.label.connect")+": ";
                break;
            case 1:
                ret =  SanBootView.res.getString("RunningTaskForDRPane.label.stopServ")+": ";
                break;
            case 2:
                ret =  SanBootView.res.getString("RunningTaskForDRPane.label.loadInfo")+": ";
                break;
            case 3:
                ret = SanBootView.res.getString("RunningTaskForDRPane.label.chgLabel")+": ";
                break;
            case 4:
                ret =  SanBootView.res.getString("RunningTaskForDRPane.label.startServ")+": ";
                break;
            case 5:
                ret = SanBootView.res.getString("RunningTaskForDRPane.label.reboot")+": ";
                break;
            default: 
                ret = "Unknown";
                break;
        }
        return  ret;
    }
}
