/*
 * AddUserDialog.java
 *
 * Created on October 19, 2004, 8:45 PM
 */

package guisanboot.ui;

import javax.swing.*;
import javax.swing.tree.*;
import java.awt.event.*;

import mylib.UI.*;
import mylib.tool.*;
import guisanboot.res.*;
import guisanboot.audit.data.*;

/**
 *
 * @author  Administrator
 */

// 这个类在完成audit后就可以删除了（2011.3.19）
public class AddUserDialog extends javax.swing.JDialog {
    SanBootView view;
    BackupUser user;
    int row;
    
    ButtonGroup group = new ButtonGroup();
    
    /** Creates new form AddUserDialog */
    public AddUserDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public AddUserDialog( SanBootView view, BackupUser user, int row ) {
        this( view, true );
        myInit( view,user,row );
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPasswordField2 = new javax.swing.JPasswordField();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("jLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jLabel1, gridBagConstraints);

        jTextField1.setPreferredSize(new java.awt.Dimension(220, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanel1.add(jTextField1, gridBagConstraints);

        jLabel2.setText("jLabel2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        jLabel3.setText("jLabel3");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel4.setText("jLabel4");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        jRadioButton1.setText("Administrator");
        jRadioButton1.setPreferredSize(new java.awt.Dimension(100, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jRadioButton1, gridBagConstraints);

        jRadioButton2.setText(" Normal Operator");
        jRadioButton2.setPreferredSize(new java.awt.Dimension(120, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jRadioButton2, gridBagConstraints);

        jPasswordField1.setPreferredSize(new java.awt.Dimension(220, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanel1.add(jPasswordField1, gridBagConstraints);

        jPasswordField2.setPreferredSize(new java.awt.Dimension(220, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanel1.add(jPasswordField2, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel2.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(5, 1, 1, 1)));
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 25, 5));

        jPanel3.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(5, 1, 1, 1)));
        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel3.add(jButton1);

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel3.add(jButton2);

        jPanel2.add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel2.add(jSeparator1, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int right = 0,retid;
        boolean isOk;
        BackupUser newuser;

        String _name = this.jTextField1.getText();
        if( _name.equals("") ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("AddUserDialog.errMsg.nonename")
            );
            return;
        }
        
        if( Check.checkInput( _name ) ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("AddUserDialog.errMsg.badName")
            );
            return;
        }
        
        try{      
            if( Check.getUTF8BytesLen( _name ) >=32 ){
                JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("AddUserDialog.errMsg.invalidName")
                );
                return;
            }
        }catch( java.io.UnsupportedEncodingException ex ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("AddUserDialog.errMsg.invalidName")
            );
            return;
        }
        
        String passwd1 = new String( jPasswordField1.getPassword() );
        if( !passwd1.equals("") ){
            try{      
                if( Check.getUTF8BytesLen( passwd1 ) >=8 ){
                    JOptionPane.showMessageDialog(this,
                        SanBootView.res.getString("AddUserDialog.errMsg.invalidPwd")
                    );
                    return;
                }
            }catch( java.io.UnsupportedEncodingException ex ){
                JOptionPane.showMessageDialog(this,
                    SanBootView.res.getString("AddUserDialog.errMsg.invalidPwd")
                );
                return;
            }            
        }
        
        String passwd2 = new String( jPasswordField2.getPassword());
        if( !passwd1.equals(passwd2) ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("AddUserDialog.errMsg.mismatchpasswd")
            );
            return;
        }

        if( this.jRadioButton1.isSelected() ){
            right = right | BackupUser.RIGHT_ADMIN;
        }else{
            right = right | BackupUser.RIGHT_ADMIN;
        }

        if( view.isSameUser( _name,row ) ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("AddUserDialog.errMsg.sameUser")
            );
            return;
        }

        if( user!=null ){ // modify a user
            if( user.isAdminRight() ){
                // 如果要修改的用户具有管理员权限,并且是系统最后一个,
                // 但是又要改为opter,则报错
                boolean isOpter = ((right&BackupUser.RIGHT_ADMIN)!=0)?true:false;
                if( isOpter ){
                    if( view.initor.mdb.isLastAdminUser( user.getUserName() ) ){
                        JOptionPane.showMessageDialog(this,
                            SanBootView.res.getString("AddUserDialog.error.delAdmUser")
                        );
                        return;
                    }
                }
            }
            
            // don't change user's passwd.
            newuser = new BackupUser( _name,user.getPasswd(),right );
            
            isOk = view.initor.mdb.addOrModBackupUser( newuser,1 );
            if( isOk ){
                // firstly remove old user
                view.initor.mdb.removeUserFromVector( user );
                view.removeTableRow( row );

                // then add new user
                view.initor.mdb.AddUserToVector( newuser );
                view.insertUserToTable( newuser );
            
                // 显示点击 chiefUserNode 后的右边tabpane中的内容
                BrowserTreeNode chiefUserNode = view.getChiefNodeOnRoot(
                    ResourceCenter.TYPE_CHIEF_USER_INDEX
                );
                if( chiefUserNode !=null ){
                    view.setCurNode( chiefUserNode );
                    view.setCurBrowserEventType( Browser.TREE_SELECTED_EVENT );
                    ProcessEventOnChiefUser peOnChiefUser = new ProcessEventOnChiefUser( view );
                    TreePath path = new TreePath( chiefUserNode.getPath() );
                    peOnChiefUser.processTreeSelection( path );
                    peOnChiefUser.controlMenuAndBtnForTreeEvent();
                    view.getTree().setSelectionPath( path );
                    view.getTree().requestFocus();      
                }
            }else{
                JOptionPane.showMessageDialog( view,
                    ResourceCenter.getCmd( ResourceCenter.CMD_MOD_USER ) + " : " +
                        view.initor.mdb.getErrorMessage() 
                );
                return;
            }
        }else { // add a new user
            newuser = new BackupUser( _name,passwd1,right );
            isOk = view.initor.mdb.addOrModBackupUser( newuser, 0 );
            
            if( isOk ){ 
                view.initor.mdb.AddUserToVector( newuser );
                view.insertUserToTable( newuser );

                // 显示点击 chiefUserNode 后的右边tabpane中的内容
                BrowserTreeNode chiefUserNode = view.getChiefNodeOnRoot(
                    ResourceCenter.TYPE_CHIEF_USER_INDEX
                );
                if( chiefUserNode !=null ){
                    view.setCurNode( chiefUserNode );
                    view.setCurBrowserEventType( Browser.TREE_SELECTED_EVENT );
                    ProcessEventOnChiefUser peOnChiefUser = new ProcessEventOnChiefUser( view );
                    TreePath path = new TreePath( chiefUserNode.getPath() );
                    peOnChiefUser.processTreeSelection( path );
                    peOnChiefUser.controlMenuAndBtnForTreeEvent();
                    view.getTree().setSelectionPath( path );
                    view.getTree().requestFocus();      
                }
            }else{
                JOptionPane.showMessageDialog(view,
                    ResourceCenter.getCmd(ResourceCenter.CMD_ADD_USER ) + " : "+
                        view.initor.mdb.getErrorMessage()
                );
                return;
            }
        }
        
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new AddUserDialog(new javax.swing.JFrame(), true).setVisible( true );
    }
    
    ////GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    ////GEN-END:variables
    
    private void myInit(SanBootView _view,BackupUser _user, int _row){
        view = _view;
        user = _user;
        row  = _row;
        
        group.add(this.jRadioButton1);
        group.add(this.jRadioButton2 );
        
        if( user!=null ){
            jTextField1.setText( user.getUserName() );
            //passwdTextField.setText( user.getPasswd() );
            //passwdAgainTextField.setText( user.getPasswd() );
            if( user.isAdminRight() ){
                jRadioButton1.setSelected( true );
            }else if( user.isOperRight() ){
                jRadioButton2.setSelected( true );
            }else{
                jRadioButton2.setSelected( true );
            }
        }else{
            jRadioButton2.setSelected( true );
        }

        regKeyboardAction();
        jTextField1.requestFocus();
        
        setupLanguage();
    }
    
    private void setupLanguage(){
        if( user == null ){
            setTitle( SanBootView.res.getString("AddUserDialog.diagTitle.Add"));
        }else{
            setTitle( SanBootView.res.getString("AddUserDialog.diagTitle.mod"));
        }
        jButton1.setText(SanBootView.res.getString("common.button.ok"));
        jButton2.setText(SanBootView.res.getString("common.button.cancel"));
        jLabel1.setText( SanBootView.res.getString("AddUserDialog.label.name"));
        jLabel2.setText( SanBootView.res.getString("AddUserDialog.label.passwd"));
        jLabel3.setText( SanBootView.res.getString("AddUserDialog.label.passwdAgain"));
        jLabel4.setText( SanBootView.res.getString("AddUserDialog.label.perm"));
        jRadioButton1.setText(
          SanBootView.res.getString("AddUserDialog.radioButton.admin")
        );
        jRadioButton2.setText(
          SanBootView.res.getString("AddUserDialog.radioButton.oper")
        );
    }
    
    private void regKeyboardAction(){
        jTextField1.registerKeyboardAction(
            new ActionListener(){
                public void actionPerformed(ActionEvent e){
                    jPasswordField1.requestFocusInWindow();
                }
            },
            KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0,true),
            JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT
        );
        
        jPasswordField1.registerKeyboardAction(
            new ActionListener(){
                public void actionPerformed(ActionEvent e){
                    jPasswordField2.requestFocus();
                }
            },
            KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0,true),
            //JComponent.WHEN_IN_FOCUSED_WINDOW
            JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT
        );
          
        jPasswordField2.registerKeyboardAction(
            new ActionListener(){
                public void actionPerformed(ActionEvent e){
                    jRadioButton1.requestFocus();
                }
            },
            KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0,true),
            //JComponent.WHEN_IN_FOCUSED_WINDOW
            JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT
        );
            
        jRadioButton1.registerKeyboardAction(
            new ActionListener(){
                public void actionPerformed(ActionEvent e){
                    jRadioButton2.requestFocus();
                }
            },
            KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0,true),
            //JComponent.WHEN_IN_FOCUSED_WINDOW
            JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT
        );
            
        jRadioButton2.registerKeyboardAction(
            new ActionListener(){
                public void actionPerformed(ActionEvent e){
                    jButton1.requestFocus();
                }
            },
            KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0,true),
            //JComponent.WHEN_IN_FOCUSED_WINDOW
            JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT
        );
    }
}
