/*
 * TaskConfigForFailbackPane.java
 *
 * Created on 2006/12/29,AM 9:52
 */

package guisanboot.ui;

import java.awt.*;
import javax.swing.*;
import javax.swing.table.*;
import java.util.*;
import mylib.UI.*;
import guisanboot.data.*;


/**
 *
 * @author  Administrator
 */
public class TaskConfigForFailbackPane extends javax.swing.JPanel {
    
    /** Creates new form TaskConfigForFailbackPane */
    public TaskConfigForFailbackPane() {
        initComponents();
    }
    
    public TaskConfigForFailbackPane( SanBootView view ) {
        this( view,false );
    }

    public TaskConfigForFailbackPane( SanBootView view,boolean isSwitchDisk ) {
        this();
        myInit( view,isSwitchDisk );
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(20, 10));
        add(jPanel1, java.awt.BorderLayout.WEST);

        jPanel2.setPreferredSize(new java.awt.Dimension(20, 10));
        add(jPanel2, java.awt.BorderLayout.EAST);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel4.setPreferredSize(new java.awt.Dimension(10, 70));
        jScrollPane1.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(1, 1, 1, 1)));
        jTextArea1.setLineWrap(true);
        jTextArea1.setDisabledTextColor(java.awt.Color.black);
        jTextArea1.setEnabled(false);
        jTextArea1.setOpaque(false);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel4.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel4, java.awt.BorderLayout.NORTH);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel5.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel6.setPreferredSize(new java.awt.Dimension(10, 25));
        jPanel3.add(jPanel6, java.awt.BorderLayout.SOUTH);

        add(jPanel3, java.awt.BorderLayout.CENTER);

    }
    // </editor-fold>//GEN-END:initComponents
    
    
    ////GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    ////GEN-END:variables
    
    Vector<InitTask> taskList = new Vector<InitTask>();
    GeneralEditableTable table = new GeneralEditableTable();
    SanBootView view;
    boolean isSwitchDisk;
    
    public static int CONF_CHGE_BIOS_ROW     = 0;
    public static int CONF_STOP_SERV_ROW     = 1;
    public static int CONF_ASSIGN_DRIVER_ROW = 2;
    public static int CONF_START_SERV_ROW    = 3;
    public static int CONF_DEL_PTGT_ROW      = 4;
    
    private void myInit( SanBootView _view,boolean isSwitchDisk ){
        view = _view;
        this.isSwitchDisk = isSwitchDisk;

        jScrollPane2.getViewport().add( table,null );
        jScrollPane2.getViewport().setBackground( Color.white );
        
        jTextArea1.setText(
            SanBootView.res.getString("FailbackWizardDialog.tip3")
        );
        
        assembleTask();
        setupTable();
    }
    
    private void assembleTask(){
        taskList.removeAllElements();
        
        int cnt = 0;
        InitTask task = new InitTask();

        if( !this.isSwitchDisk ){
            task = new InitTask();
            cnt++;
            task.seq = cnt;
            task.task = SanBootView.res.getString("common.failback.chgBIOS");
            TaskConfigForFailbackPane.CONF_CHGE_BIOS_ROW = (cnt-1);
            taskList.addElement( task );
        }

        task = new InitTask();
        cnt++;
        task.seq = cnt;
        task.task = SanBootView.res.getString("common.failback.stopServ");
        TaskConfigForFailbackPane.CONF_STOP_SERV_ROW = (cnt-1);
        taskList.addElement( task );
        
        task = new InitTask();
        cnt++;
        task.seq = cnt;
        task.task = SanBootView.res.getString("common.failback.chgLabel");
        TaskConfigForFailbackPane.CONF_ASSIGN_DRIVER_ROW = (cnt-1);
        taskList.addElement( task );
        
        task = new InitTask();
        cnt++;
        task.seq = cnt;
        task.task = SanBootView.res.getString("common.failback.startServ");
        TaskConfigForFailbackPane.CONF_START_SERV_ROW = (cnt-1);
        taskList.addElement( task );
        
        task = new InitTask();
        cnt++;
        task.seq = cnt;
        task.task = SanBootView.res.getString("common.failback.delPersistenTgt");
        TaskConfigForFailbackPane.CONF_DEL_PTGT_ROW = (cnt-1);
        taskList.addElement( task );
    }
    
    private void setupTable(){
        int i;
        Object[][] data;
        
        int num = taskList.size();

        data = new Object[2+num][3]; //isFinish?,seq,task
        data[0][0] = "" + num;    // row num
        data[0][1] = "" + 3;      // col num

        data[1][0] = SanBootView.res.getString("TaskConfigPane.table.task.isFinish");
        data[1][1] = SanBootView.res.getString("TaskConfigPane.table.task.seq");
        data[1][2] = SanBootView.res.getString("TaskConfigPane.table.task.task");
        
        for( i=0; i<num; i++ ){
            InitTask task = (InitTask)taskList.elementAt(i);
            
            data[2+i][0] = Boolean.FALSE;
            data[2+i][1] = task.seq+"";
            data[2+i][2] = task.task;
        }

        table.setTableModel( data );
        table.setDefaultLook();

        TableColumnModel tableColumnModel = table.getColumnModel();
        int colNum = tableColumnModel.getColumnCount();
        for( i=0;i<colNum;i++ ){
            if( i == 0  ) continue; //这一列要用系统缺省的渲染器，否则CheckBox的图形效果出不来
            tableColumnModel.getColumn(i).setCellRenderer(new BrowserTableCellRenderer());
        }

        tableColumnModel.getColumn(0).setWidth( 50 );
        tableColumnModel.getColumn(1).setWidth( 50 );
        tableColumnModel.getColumn(2).setWidth( 300 );
        for( i=0;i<colNum;i++ )
            table.sizeColumnsToFit(i);

        table.getTableHeader().setBorder( BorderFactory.createRaisedBevelBorder() );
        table.getTableHeader().setReorderingAllowed(false);
    }
    
    public boolean isFinishJob( int row ){ 
        AbstractTableModel model = (AbstractTableModel)table.getModel();
        Boolean isSel = (Boolean)model.getValueAt( row,0 );
        return isSel.booleanValue();
    }
    
    public boolean isAllFinished(){
        int finished =0;
        
        AbstractTableModel model = (AbstractTableModel)table.getModel();
        int cnt = model.getRowCount();
        for( int row=0; row<cnt; row++ ){
            Boolean isSel = (Boolean)model.getValueAt( row,0 );
            if( isSel.booleanValue() ){
                finished++;
            }
        }
        
        return ( finished == cnt );
    }
}
