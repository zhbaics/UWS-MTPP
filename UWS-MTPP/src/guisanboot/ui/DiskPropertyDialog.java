/*
 * SelectVolDialog.java
 *
 * Created on 2007/1/4, 11:52AM
 */

package guisanboot.ui;

import javax.swing.*;
import java.util.*;

import guisanboot.data.*;
import java.awt.Color;
import javax.swing.table.TableColumnModel;
import mylib.UI.BrowserTableCellRenderer;

/**
 *
 * @author  Administrator
 */
public class DiskPropertyDialog extends javax.swing.JDialog {
    
    /** Creates new form SelectVolDialog */
    public DiskPropertyDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public DiskPropertyDialog(java.awt.Dialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public DiskPropertyDialog( SanBootView view,Object disk,boolean isOldDisk ){
        this( view,true );
        myInit( view,disk,isOldDisk );
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel7 = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 35, 5));

        jPanel3.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(2, 1, 2, 1)));
        jButton1.setText("Close");
        jButton1.setPreferredSize(new java.awt.Dimension(75, 27));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel3.add(jButton1);

        jPanel2.add(jPanel3, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel4.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(1, 1, 1, 1)));
        jPanel4.setPreferredSize(new java.awt.Dimension(200, 158));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel5.setPreferredSize(new java.awt.Dimension(41, 30));
        jLabel1.setText("Disk # :");
        jLabel1.setPreferredSize(new java.awt.Dimension(45, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel5.add(jLabel1, gridBagConstraints);

        jLabel6.setText("jLabel6");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 0);
        jPanel5.add(jLabel6, gridBagConstraints);

        jLabel11.setText("Capacity[MB] :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 0);
        jPanel5.add(jLabel11, gridBagConstraints);

        jLabel12.setText("jLabel12");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel5.add(jLabel12, gridBagConstraints);

        jLabel3.setPreferredSize(new java.awt.Dimension(150, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel5.add(jLabel3, gridBagConstraints);

        jPanel4.add(jPanel5, java.awt.BorderLayout.NORTH);

        jPanel6.setLayout(new java.awt.BorderLayout());

        jPanel6.setPreferredSize(new java.awt.Dimension(100, 100));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel6.add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel7.setLayout(new java.awt.BorderLayout());

        jPanel7.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(1, 1, 5, 1)));
        jPanel7.add(jSeparator2, java.awt.BorderLayout.NORTH);

        jLabel2.setText("Volumes contained in disk :");
        jPanel7.add(jLabel2, java.awt.BorderLayout.CENTER);

        jPanel6.add(jPanel7, java.awt.BorderLayout.NORTH);

        jPanel4.add(jPanel6, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel4, java.awt.BorderLayout.CENTER);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SelectVolDialog(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }
    
    ////GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    ////GEN-END:variables
    
    SanBootView view;
    GeneralEditableTable table  = new GeneralEditableTable();
    
    private void myInit( SanBootView _view,Object disk,boolean isOldDisk ){
        view = _view;
        
        jScrollPane1.getViewport().add( table,null );
        jScrollPane1.getViewport().setBackground( Color.white ); 
        
        setupDiskInfo( disk );
        setupLanguage( isOldDisk );
    }
    
    private void setupDiskInfo( Object disk ){
        List parts = null;
        if( disk instanceof DiskForWin ){
            DiskForWin wdisk = (DiskForWin)disk;
            jLabel6.setText( wdisk.getDiskno()+"" );
            jLabel12.setText( Float.toString( wdisk.getSizeInMega() )+"" );
            parts = wdisk.getPartitionList();
        }else if( disk instanceof DiskForUnix ){
            DiskForUnix udisk = (DiskForUnix)disk;
            jLabel6.setText( udisk.getDiskDevName()+"" );
            jLabel12.setText( Float.toString( udisk.getSizeInMega() )+"" );
            parts = udisk.getPartitionList();
        }
        setupVolTable( parts );
    }
    
    private void setupVolTable( List parts ){
        int i,num;
        Object[][] data;
        
        if( parts == null ){
            num = 0;
        }else{
            num = parts.size();
        }
SanBootView.log.debug(getClass().getName(), " partition num: "+num );        
        data = new Object[2+num][2]; //vol name, capacity
        data[0][0] = "" + num;    // row num
        data[0][1] = "" + 2;      // col num
        
        data[1][0] =  SanBootView.res.getString("View.table.disk.name");
        data[1][1] =  SanBootView.res.getString("View.table.disk.cap");
        
        if( parts != null ){
            Iterator itetor = parts.iterator();
            i=0;
            while( itetor.hasNext() ){
                Object disk = itetor.next();
                if( disk instanceof SystemPartitionForWin ){
                    SystemPartitionForWin volume = (SystemPartitionForWin)disk;
                    SystemPartWinWrapper wraper = new SystemPartWinWrapper( volume );
                    data[2+i][0] = wraper;
                    data[2+i][1] = wraper.getSizeStr();
                }else{
                    SystemPartitionForUnix volume = (SystemPartitionForUnix)disk;
                    SystemPartUnixWrapper wraper = new SystemPartUnixWrapper( volume );
                    data[2+i][0] = wraper;
                    data[2+i][1] = wraper.getSizeStr();
                }
                i++;
            }
        }
        
        table.setTableModel( data );
        table.setDefaultLook();
        
        TableColumnModel tableColumnModel = table.getColumnModel();
        int colNum = tableColumnModel.getColumnCount();
        for( i=0;i<colNum;i++ ){
            tableColumnModel.getColumn(i).setCellRenderer(new BrowserTableCellRenderer());
        }

        tableColumnModel.getColumn(0).setWidth( 200 );
        tableColumnModel.getColumn(1).setWidth( 120 );
        for( i=0;i<colNum;i++ )
            table.sizeColumnsToFit(i);

        table.getTableHeader().setBorder( BorderFactory.createRaisedBevelBorder() );
        table.getTableHeader().setReorderingAllowed(false);
    }
    
    private void setupLanguage( boolean isOldDisk ){
        if( isOldDisk )
            setTitle( SanBootView.res.getString("DiskPropertyDialog.title"));
        else
            setTitle( SanBootView.res.getString("DiskPropertyDialog.title1"));
        jLabel1.setText( SanBootView.res.getString("DiskPropertyDialog.label.disk"));
        jLabel11.setText( SanBootView.res.getString("DiskPropertyDialog.label.cap"));
        jLabel2.setText( SanBootView.res.getString("DiskPropertyDialog.label.contain"));
        jButton1.setText( SanBootView.res.getString("common.button.close"));
    }
}

class SystemPartWinWrapper{
    SystemPartitionForWin part;
    SystemPartWinWrapper( SystemPartitionForWin _part ){
        part = _part;
    }
    @Override public String toString(){
        String ret="";
        
        if( part.label!=null && !part.label.equals("")){
            ret = part.label;
        }
        if( part.getDiskLabel()!=null && !part.getDiskLabel().equals("") ){
            ret+="  ("+part.getDiskLabel()+":)";
        }
        
        return ret;
    }
    public String getSizeStr(){
        return part.getSizeStr();
    }
}

class SystemPartUnixWrapper{
    SystemPartitionForUnix part;
    SystemPartUnixWrapper( SystemPartitionForUnix _part ){
        part = _part;
    }
    public String toString(){
        String ret = "";
        if( part.mp.equals("none") ){
            ret +=SanBootView.res.getString("RestoreOriginalDiskWizardDialog.info.noMp");
        }else{
            ret +=part.mp;
        }
        if( !part.fsType.equals("none") && !part.fsType.equals("unknown")){
            ret += " ( "+part.fsType +" )";
        }else{
            if( part.partType.equals("LinuxSwap") ){
                ret+= " ( "+ SanBootView.res.getString("RestoreOriginalDiskWizardDialog.info.swap") +" )";
            }else{
                ret+= " ( "+part.partType + " "+ SanBootView.res.getString("RestoreOriginalDiskWizardDialog.info.part") +" )";
            }
        }
        return ret;
    }
    public String getSizeStr(){
        return part.getSizeStr();
    }
}
