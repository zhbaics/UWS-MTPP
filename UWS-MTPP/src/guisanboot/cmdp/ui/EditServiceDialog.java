/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EditServiceDialog.java
 *
 * Created on 2010-6-11, 16:19:03
 */

package guisanboot.cmdp.ui;

import guisanboot.data.Service;
import guisanboot.ui.GeneralEditableTable;
import guisanboot.ui.SanBootView;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.BorderFactory;
import javax.swing.JDialog;
import javax.swing.border.TitledBorder;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableColumnModel;
import mylib.UI.BrowserTableCellRenderer;

/**
 *
 * @author zjj
 */
public class EditServiceDialog extends javax.swing.JDialog {

    /** Creates new form EditServiceDialog */
    public EditServiceDialog(JDialog diag, boolean modal) {
        super( diag, modal);
        initComponents();
    }

    public EditServiceDialog(JDialog parent,Vector allServices,ArrayList<Service> selServices) {
        this( parent,true );
        myInit( allServices,selServices );
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Related Service"));
        jPanel1.setLayout(new java.awt.BorderLayout());
        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.BorderLayout());
        jPanel2.add(jSeparator1, java.awt.BorderLayout.NORTH);

        jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 1, 2, 1));
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 35, 5));

        jButton1.setText("OK");
        jButton1.setPreferredSize(new java.awt.Dimension(69, 21));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1);

        jButton2.setText("Cancel");
        jButton2.setPreferredSize(new java.awt.Dimension(69, 21));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);

        jPanel2.add(jPanel3, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        okBtnProcess();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ret = null;
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EditServiceDialog dialog = new EditServiceDialog(new javax.swing.JDialog(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables

    GeneralEditableTable table = new GeneralEditableTable();

    private Vector allServices;
    private ArrayList<Service> selServices;
    Vector ret = null;

    private void myInit( Vector allServices,ArrayList<Service> selServices ){
        this.allServices = allServices;
        this.selServices = selServices;

        jScrollPane1.getViewport().add( table,null );
        jScrollPane1.getViewport().setBackground( Color.white );

        setupServiceTable();
        setupLanguage();
    }
    
    private void setupLanguage(){
        this.setTitle( SanBootView.res.getString("EditServiceDialog.title") );
        this.jButton1.setText( SanBootView.res.getString("common.button.ok") );
        this.jButton2.setText( SanBootView.res.getString("common.button.cancel"));
        TitledBorder border = (TitledBorder)this.jPanel1.getBorder();
        border.setTitle( SanBootView.res.getString("EditServiceDialog.border") );
    }

    private boolean isSelected( String name ){
        int size = this.selServices.size();
        for( int i=0; i<size; i++ ){
            Service serv = selServices.get(i);
            if( serv.getServName().equals( name ) ){
                return true;
            }
        }
        return false;
    }

    public void setupServiceTable( ){
        int i;
        Object[][] data;

        int num = this.allServices.size();

        data = new Object[2+num][4]; //isSel?,name,desc,path
        data[0][0] = "" + num;    // row num
        data[0][1] = "" + 4;      // col num

        data[1][0] = SanBootView.res.getString("SelectServicePane.table.service.isSel");
        data[1][1] = SanBootView.res.getString("SelectServicePane.table.service.name");
        data[1][2] = SanBootView.res.getString("SelectServicePane.table.service.desc");
        data[1][3] = SanBootView.res.getString("SelectServicePane.table.service.path");

        for( i=0; i<num; i++ ){
            Service ser = (Service)allServices.elementAt(i);

            data[2+i][0] = new Boolean( this.isSelected( ser.getServName() ));
            data[2+i][1] = ser;
            data[2+i][2] = ser.getServDesc();
            data[2+i][3] = ser.getServPath();
        }

        table.setTableModel( data );
        table.setDefaultLook();

        TableColumnModel tableColumnModel = table.getColumnModel();
        int colNum = tableColumnModel.getColumnCount();
        for( i=0;i<colNum;i++ ){
            if( i == 0  ) continue; //这一列要用系统缺省的渲染器，否则CheckBox的图形效果出不来
            tableColumnModel.getColumn(i).setCellRenderer(new BrowserTableCellRenderer());
        }

        tableColumnModel.getColumn(0).setWidth( 50 );
        tableColumnModel.getColumn(1).setWidth( 200 );
        tableColumnModel.getColumn(2).setWidth( 300 );
        tableColumnModel.getColumn(3).setWidth( 450 );
        for( i=0;i<colNum;i++ )
            table.sizeColumnsToFit(i);

        table.getTableHeader().setBorder( BorderFactory.createRaisedBevelBorder() );
        table.getTableHeader().setReorderingAllowed(false);
    }

    private void okBtnProcess(){
        Service oldServ;
        boolean isSel;

        AbstractTableModel model = (AbstractTableModel)table.getModel();
        int lineNum = model.getRowCount();
        ret = new Vector( lineNum );

        for( int row=0; row<lineNum; row++ ){
            isSel = ((Boolean)model.getValueAt( row, 0 )).booleanValue();
            if( isSel ){
                oldServ  = (Service)model.getValueAt(row, 1);
                ret.add( oldServ.getServName() );
            }
        }
        
        this.dispose();
    }

    public Vector getRet(){
        return this.ret;
    }
}
