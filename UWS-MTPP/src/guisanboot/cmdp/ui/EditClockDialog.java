/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EditClockDialog.java
 *
 * Created on 2011-7-27, 16:38:34
 */

package guisanboot.cmdp.ui;

import guisanboot.datadup.data.Clock;
import guisanboot.ui.SanBootView;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author zjj
 */
public class EditClockDialog extends javax.swing.JDialog {

    /** Creates new form EditClockDialog */
    public EditClockDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** Creates new form EditClockDialog */
    public EditClockDialog(java.awt.Dialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public EditClockDialog( EditCronSchDialog dialog,Clock clock ){
        this( dialog,true );
        myInit( dialog,clock );
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Hour");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Minute");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jSpinner1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jSpinner2, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 25, 5));

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        do_okProcess();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        do_cancelProcess();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EditClockDialog dialog = new EditClockDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    // End of variables declaration//GEN-END:variables

    EditCronSchDialog dialog;
    Clock clock;
    Object[] ret;

    private void myInit( EditCronSchDialog dialog,Clock clock ){
        this.dialog = dialog;
        this.clock = clock;

        this.jSpinner1.setModel( new SpinnerNumberModel( 0,0,23,1 ) );
        this.jSpinner2.setModel(new SpinnerNumberModel( 0,0,59,1) );

        int intHour = 0;
        try{
            intHour = Integer.parseInt( clock.getHour() );
        }catch(Exception ex){}
        int intMin = 0;
        try{
            intMin = Integer.parseInt( clock.getMin() );
        }catch(Exception ex){}

        this.jSpinner1.setValue( intHour );
        this.jSpinner2.setValue( intMin ) ;

        this.setupLanguage();
    }
    
    private void setupLanguage(){
        this.setTitle( SanBootView.res.getString("SchedDialog.dialogTitle2") );
        this.jLabel1.setText( SanBootView.res.getString("SchedDialog.label.hour") );
        this.jLabel2.setText( SanBootView.res.getString("SchedDialog.label.min") );
        this.jButton1.setText( SanBootView.res.getString("common.button.ok") );
        this.jButton2.setText( SanBootView.res.getString("common.button.cancel") );
    }
    
    private void do_okProcess(){
        Clock cl= new Clock();
        cl.setHour( this.jSpinner1.getValue().toString() );
        cl.setMin( this.jSpinner2.getValue().toString() );
        if( dialog.isSameClock( cl ) ){
            JOptionPane.showMessageDialog( this, SanBootView.res.getString("SchedDialog.errmsg.sameClock") );
            return;
        }
        
        ret = new Object[2];
        ret[0] = cl.getHour();
        ret[1] = cl.getMin();
        this.dispose();
    }
    
    private void do_cancelProcess(){
        ret = null;
        this.dispose();
    }

    public Object[] getRetValue(){
        return this.ret;
    }
}
