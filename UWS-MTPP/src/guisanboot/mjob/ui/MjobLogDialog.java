/*
 * AuditLogDialog.java
 *
 * Created on Aug 10, 2009, 11:43 AM
 */

package guisanboot.mjob.ui;

import guisanboot.mjob.Mjob;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.border.*;
import javax.swing.table.*;

import mylib.UI.*;
import guisanboot.res.*;
import guisanboot.ui.SanBootView;

/**
 *
 * @author  Administrator
 */
public class MjobLogDialog extends javax.swing.JDialog {
    SanBootView view;
    BrowserTable table = new BrowserTable();
    int begin = 1;
    int end = 51;
    boolean isFirst = true;
    boolean beforeGet = true;
    boolean hasDel = false;
    private final Object lock = new Object();
    
    // 表选择listener,但是要注意add和remove，否则gui上有问题
    ListSelectionListener listener;
    
    /** Creates new form BackupHistoryDialog */
    public MjobLogDialog(java.awt.Frame parent, boolean modal) {
        super( parent, modal );
        initComponents();
    }
    
    public MjobLogDialog( SanBootView view ){
        this( view,true );
        myInit( view );
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel7 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel5.setMinimumSize(new java.awt.Dimension(0, 50));
        jPanel5.setPreferredSize(new java.awt.Dimension(0, 150));
        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel6.setLayout(new java.awt.BorderLayout());
        jPanel6.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel5.add(jPanel6, java.awt.BorderLayout.CENTER);

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 25, 5));

        jButton3.setText("back");
        jPanel7.add(jButton3);

        jButton4.setText("next");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton4);

        jButton5.setText("Remove All");
        jButton5.setPreferredSize(new java.awt.Dimension(97, 24));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton5);

        jButton2.setText("Close");
        jButton2.setPreferredSize(new java.awt.Dimension(81, 24));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton2);

        jPanel5.add(jPanel7, java.awt.BorderLayout.SOUTH);

        jPanel1.add(jPanel5, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.BorderLayout());
        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    // remove all
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    // remove    
    // next
    // back
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int ret = JOptionPane.showConfirmDialog(
                this,
                SanBootView.res.getString("MjobLogDialog.confirm1"),
                SanBootView.res.getString("common.confirm"),
                JOptionPane.OK_CANCEL_OPTION
                );
        if( ( ret == JOptionPane.CANCEL_OPTION ) || ( ret == JOptionPane.CLOSED_OPTION) ){
            return;
        }

        // 先删除所有的 log
        RemoveMjobLogThread  thread = new RemoveMjobLogThread(
                view,
                this
                );
        view.startupProcessDiag(
                SanBootView.res.getString("MjobLogDialog.pdiagTitle.deltingMjobLog"),
                SanBootView.res.getString("MjobLogDialog.pdiagTip.deltingMjobLog"),
                thread
                );

        // 再清除表上的所有记录
        clearGenandSumPane();
        removeListSelectionListener();
        removeAllRow();

        // 重新初始化
        hasDel = false;
        begin = 1;
        end = 1;

        addListSelectionListener();
}//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new MjobLogDialog(new javax.swing.JFrame(), true).setVisible( true );
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    
    private void myInit( SanBootView _view ){
        view = _view;
        
        setPermOnUser();
        
        jScrollPane1.getViewport().add( table,null );
        jScrollPane1.getViewport().setBackground( Color.white );
        table.addMouseListener( new java.awt.event.MouseAdapter() {
            @Override public void mouseClicked(MouseEvent e) {
                table_mouseClicked(e);
            }
            
        });
        
        table.setSelectionMode( ListSelectionModel.MULTIPLE_INTERVAL_SELECTION );
        
        listener = new ListSelectionListener(){
            public void valueChanged( ListSelectionEvent e ){
                table_mouseClicked( null );
            }
        };
        
        enableButton( false );
        setupLanguage();
        setupTaskTable();
    }
    
    private void  setPermOnUser(){
        if( view.initor.mdb.isLoginUsrIsAdmin() ){ 
//            jButton1.setEnabled( false );
//            jButton5.setEnabled( false );
        }
    }
    
    /**
     * 关闭窗口的处理.<br>
     * @param  WindowEvent e  窗口事件
     */
    @Override protected void processWindowEvent(WindowEvent e) {
        super.processWindowEvent(e);
        if ( e.getID() == WindowEvent.WINDOW_CLOSING ) {
            dispose();
        }
    }
    
    
    
    public void addListSelectionListener(){
        if( listener != null ){
            table.getSelectionModel().addListSelectionListener( 
                listener 
            );
        }
    }
    
    private void removeListSelectionListener(){
        if( listener != null ){
            table.getSelectionModel().removeListSelectionListener( 
                listener 
            );
        }
    }
    
    public DefaultTableModel getTableModel(){
        return (DefaultTableModel)table.getModel();
    }
    
    private void setupLanguage(){
        this.setTitle(SanBootView.res.getString("MjobLogDialog.title"));
        this.jButton2.setText(SanBootView.res.getString("BackupHistoryDialog.button.close"));
                this.jButton3.setText(SanBootView.res.getString("BackupHistoryDialog.button.back"));
        this.jButton4.setText(SanBootView.res.getString("BackupHistoryDialog.button.next"));
        this.jButton5.setText(SanBootView.res.getString("BackupHistoryDialog.button.remall"));
        
    }
    
    private void setupTaskTable(){
        Object[] title = new Object[]{
            SanBootView.res.getString("MjobLogDialog.table.mjob.beginTime"),//0
            SanBootView.res.getString("MjobLogDialog.table.mjob.endTime"),//1
             SanBootView.res.getString("MjobLogDialog.table.mjob.id"),//2
            SanBootView.res.getString("MjobLogDialog.table.mjob.rootid"),//3
//            SanBootView.res.getString("AuditLogDialog.table.audit.event")
            SanBootView.res.getString("MjobLogDialog.table.mjob.destrootid"),//4
            SanBootView.res.getString("MjobLogDialog.table.mjob.size"),//5
            SanBootView.res.getString("MjobLogDialog.table.mjob.transfersize"),//6
            SanBootView.res.getString("MjobLogDialog.table.mjob.runtime")//7

        };
        table.setupTitle( title );
        
        int[][] widthList = new int[][]{
            {0,120},{1,120},{2,55},{3,55},{4,55},{5,120},{6,120},{7,60},
        };
        table.setupTableColumnWidth( widthList );
        table.getTableHeader().setBorder( BorderFactory.createRaisedBevelBorder() );
        table.getTableHeader().setReorderingAllowed( false );
    }
    
    private void table_mouseClicked( MouseEvent e ){
        int row = table.getSelectedRow();
        if( row < 0 ){
            JOptionPane.showMessageDialog(this,
                SanBootView.res.getString("BackupHistoryDialog.error.nosel")
            );
            return;
        }
        
        int mjobIdCol = table.getColumn(
            SanBootView.res.getString("MjobLogDialog.table.mjob.id")
        ).getModelIndex();
        DefaultTableModel tableModel = (DefaultTableModel)table.getModel();
        tableModel.getValueAt(row, mjobIdCol);
       
    }

    public void enableButton( boolean val ){
        //上一页
        if( isFirst ){
            jButton4.setEnabled( false );
            isFirst = false;
        }else{
            if( getBeforeGet() ){
                this.jButton3.setEnabled( val );
            }else{
                if( begin <=1 ){
                    jButton4.setEnabled( false );
                }else if( begin>=51 ){
                    jButton4.setEnabled( true );
                }
            }
        }

        //下一页
        if( getBeforeGet() ){
            jButton4.setEnabled( val );
        }else{
            if( table.getRowCount()<50 ){               
                jButton4.setEnabled( false);
            }else{
                jButton4.setEnabled( true );
            }
        }
        
        
        jButton2.setEnabled( val );
        
        if( !val)
            setDefaultCloseOperation( JDialog.DO_NOTHING_ON_CLOSE );
        else
            setDefaultCloseOperation( JDialog.DISPOSE_ON_CLOSE );
        
        if( val ){ // 判断 next btn的下一步状态
            if( begin == 1 && end == 51 && table.getRowCount()<=0 ){
                hasDel = false;
                begin = 1;
                end = 1;
                this.jButton4.setEnabled(true);
            }
        }
    }

    private void removeAllRow(){
        DefaultTableModel model = (DefaultTableModel)table.getModel();
        int size = model.getRowCount();
        while( size >0 ){
             model.removeRow( 0);
             size = size -1;
        }
    }
    
    public void setBeforeGet( boolean val){
        synchronized ( lock ){
            beforeGet = val;
        }
    }
    
    public boolean getBeforeGet(){
        synchronized ( lock ){
            return beforeGet;
        }
    }
    
    public Point getCenterPoint( int width,int height ){
        int x = ( getSize().width - width ) / 2 + getX();
        int y = ( getSize().height - height ) / 2 + getY();
        return new Point(x,y);
    }
    
    private void clearGenandSumPane(){
        table.clearTable();
    }

}
